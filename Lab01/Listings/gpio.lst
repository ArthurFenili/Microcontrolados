


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000         ; Declarações EQU - Defines
   11 00000000         ; ========================
   12 00000000         ; ========================
   13 00000000         ; Definições dos Registradores Gerais
   14 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   15 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   16 00000000         ; ========================
   17 00000000         ; Definições dos Ports
   18 00000000         
   19 00000000         ; PORT A
   20 00000000 40058520 
                       GPIO_PORTA_AHB_LOCK_R
                               EQU              0x40058520
   21 00000000 40058524 
                       GPIO_PORTA_AHB_CR_R
                               EQU              0x40058524
   22 00000000 40058528 
                       GPIO_PORTA_AHB_AMSEL_R
                               EQU              0x40058528
   23 00000000 4005852C 
                       GPIO_PORTA_AHB_PCTL_R
                               EQU              0x4005852C
   24 00000000 40058400 
                       GPIO_PORTA_AHB_DIR_R
                               EQU              0x40058400
   25 00000000 40058420 
                       GPIO_PORTA_AHB_AFSEL_R
                               EQU              0x40058420
   26 00000000 4005851C 
                       GPIO_PORTA_AHB_DEN_R
                               EQU              0x4005851C
   27 00000000 40058510 
                       GPIO_PORTA_AHB_PUR_R
                               EQU              0x40058510
   28 00000000 400583FC 
                       GPIO_PORTA_AHB_DATA_R
                               EQU              0x400583FC
   29 00000000 40058000 
                       GPIO_PORTA_AHB_DATA_BITS_R
                               EQU              0x40058000
   30 00000000 00000001 
                       GPIO_PORTA
                               EQU              2_000000000000001 



ARM Macro Assembler    Page 2 


                                                            ; SYSCTL_PPGPIO_P0
   31 00000000         
   32 00000000         ; PORT J
   33 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   34 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   35 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   36 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   37 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   38 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   39 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   40 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   41 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   42 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000
   43 00000000         
   44 00000000         ; PORT Q
   45 00000000 40066520 
                       GPIO_PORTQ_LOCK_R
                               EQU              0x40066520
   46 00000000 40066524 
                       GPIO_PORTQ_CR_R
                               EQU              0x40066524
   47 00000000 40066528 
                       GPIO_PORTQ_AMSEL_R
                               EQU              0x40066528
   48 00000000 4006652C 
                       GPIO_PORTQ_PCTL_R
                               EQU              0x4006652C
   49 00000000 40066400 
                       GPIO_PORTQ_DIR_R
                               EQU              0x40066400
   50 00000000 40066420 
                       GPIO_PORTQ_AFSEL_R
                               EQU              0x40066420
   51 00000000 4006651C 
                       GPIO_PORTQ_DEN_R
                               EQU              0x4006651C
   52 00000000 40066510 
                       GPIO_PORTQ_PUR_R
                               EQU              0x40066510



ARM Macro Assembler    Page 3 


   53 00000000 400663FC 
                       GPIO_PORTQ_DATA_R
                               EQU              0x400663FC
   54 00000000 00004000 
                       GPIO_PORTQ
                               EQU              2_100000000000000
   55 00000000         
   56 00000000         ; PORT B
   57 00000000 40059520 
                       GPIO_PORTB_AHB_LOCK_R
                               EQU              0x40059520
   58 00000000 40059524 
                       GPIO_PORTB_AHB_CR_R
                               EQU              0x40059524
   59 00000000 40059528 
                       GPIO_PORTB_AHB_AMSEL_R
                               EQU              0x40059528
   60 00000000 4005952C 
                       GPIO_PORTB_AHB_PCTL_R
                               EQU              0x4005952C
   61 00000000 40059400 
                       GPIO_PORTB_AHB_DIR_R
                               EQU              0x40059400
   62 00000000 40059420 
                       GPIO_PORTB_AHB_AFSEL_R
                               EQU              0x40059420
   63 00000000 4005951C 
                       GPIO_PORTB_AHB_DEN_R
                               EQU              0x4005951C
   64 00000000 40059510 
                       GPIO_PORTB_AHB_PUR_R
                               EQU              0x40059510
   65 00000000 400593FC 
                       GPIO_PORTB_AHB_DATA_R
                               EQU              0x400593FC
   66 00000000 40059000 
                       GPIO_PORTB_AHB_DATA_BITS_R
                               EQU              0x40059000
   67 00000000 00000002 
                       GPIO_PORTB
                               EQU              2_000000000000010 
                                                            ; SYSCTL_PPGPIO_P1
   68 00000000         
   69 00000000         ; PORT P
   70 00000000 40065520 
                       GPIO_PORTP_LOCK_R
                               EQU              0x40065520
   71 00000000 40065524 
                       GPIO_PORTP_CR_R
                               EQU              0x40065524
   72 00000000 40065528 
                       GPIO_PORTP_AMSEL_R
                               EQU              0x40065528
   73 00000000 4006552C 
                       GPIO_PORTP_PCTL_R
                               EQU              0x4006552C
   74 00000000 40065400 
                       GPIO_PORTP_DIR_R
                               EQU              0x40065400



ARM Macro Assembler    Page 4 


   75 00000000 40065420 
                       GPIO_PORTP_AFSEL_R
                               EQU              0x40065420
   76 00000000 4006551C 
                       GPIO_PORTP_DEN_R
                               EQU              0x4006551C
   77 00000000 40065510 
                       GPIO_PORTP_PUR_R
                               EQU              0x40065510
   78 00000000 400653FC 
                       GPIO_PORTP_DATA_R
                               EQU              0x400653FC
   79 00000000 40065000 
                       GPIO_PORTP_DATA_BITS_R
                               EQU              0x40065000
   80 00000000 00002000 
                       GPIO_PORTP
                               EQU              2_010000000000000
   81 00000000         
   82 00000000         ; ------------------------------------------------------
                       -------------------------
   83 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   84 00000000         ;                  código
   85 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   86 00000000         
   87 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   88 00000000                 EXPORT           GPIO_Init   ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
   89 00000000                 EXPORT           PortB_Output ; Permite chamar P
                                                            ortB_Output de outr
                                                            o arquivo
   90 00000000                 EXPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
   91 00000000                 EXPORT           PortP_Output
   92 00000000                 EXPORT           LED_Output
   93 00000000                 EXPORT           Display_Output
   94 00000000         
   95 00000000         
   96 00000000                 IMPORT           Pisca_Transistor_PP5
   97 00000000                 IMPORT           Pisca_Transistor_PB4
   98 00000000                 IMPORT           Pisca_Transistor_PB5
   99 00000000                 IMPORT           SysTick_Wait1ms
  100 00000000         
  101 00000000         
  102 00000000         ; Mapeamento dos 7 segmentos (0 a F)
  103 00000000 3F 06 5B 
              4F 66 6D 
              7D 07 7F 
              6F       MAPEAMENTO_7SEG
                               DCB              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0
x6D, 0x7D, 0x07, 0x7F, 0x6F
  104 0000000A         
  105 0000000A         ;-------------------------------------------------------
                       -------------------------



ARM Macro Assembler    Page 5 


  106 0000000A         ; Função GPIO_Init
  107 0000000A         ; Parâmetro de entrada: Não tem
  108 0000000A         ; Parâmetro de saída: Não tem
  109 0000000A         GPIO_Init
  110 0000000A         ;=====================
  111 0000000A         ; ****************************************
  112 0000000A         ; Escrever função de inicialização dos GPIO
  113 0000000A         ; Inicializar as portas J e N
  114 0000000A         ; ****************************************
  115 0000000A 4877            LDR              R0, =SYSCTL_RCGCGPIO_R ;Carrega
                                                             o endereço do regi
                                                            strador RCGCGPIO
  116 0000000C F44F 4180       MOV              R1, #GPIO_PORTQ ;Seta o bit da 
                                                            porta Q
  117 00000010 F441 7180       ORR              R1, #GPIO_PORTJ ;Seta o bit da 
                                                            porta J, fazendo co
                                                            m OR
  118 00000014 F041 0102       ORR              R1, #GPIO_PORTB ;Seta o bit da 
                                                            porta B, fazendo co
                                                            m OR
  119 00000018 F041 0101       ORR              R1, #GPIO_PORTA ;Seta o bit da 
                                                            porta A, fazendo co
                                                            m OR
  120 0000001C F441 5100       ORR              R1, #GPIO_PORTP ;Seta o bit da 
                                                            porta P, fazendo co
                                                            m OR
  121 00000020 6001            STR              R1, [R0]    ;Move para a memóri
                                                            a os bits das porta
                                                            s no endereço do RC
                                                            GCGPIO
  122 00000022         
  123 00000022 4872            LDR              R0, =SYSCTL_PRGPIO_R ;Carrega o
                                                             endereço do PRGPIO
                                                             para esperar os GP
                                                            IO ficarem prontos
  124 00000024 6801    EsperaGPIO
                               LDR              R1, [R0]    ;Lê da memória o co
                                                            nteúdo do endereço 
                                                            do registrador
  125 00000026 F44F 4280       MOV              R2, #GPIO_PORTQ ;Seta os bits c
                                                            orrespondentes às p
                                                            ortas para fazer a 
                                                            comparação
  126 0000002A F442 7280       ORR              R2, #GPIO_PORTJ ;Seta o bit da 
                                                            porta J, fazendo co
                                                            m OR
  127 0000002E F042 0202       ORR              R2, #GPIO_PORTB ;Seta o bit da 
                                                            porta B, fazendo co
                                                            m OR
  128 00000032 F042 0201       ORR              R2, #GPIO_PORTA ;Seta o bit da 
                                                            porta A, fazendo co
                                                            m OR
  129 00000036 F442 5200       ORR              R2, #GPIO_PORTP ;Seta o bit da 
                                                            porta P, fazendo co
                                                            m OR
  130 0000003A 4211            TST              R1, R2      ;ANDS de R1 com R2
  131 0000003C D0F2            BEQ              EsperaGPIO  ;Se o flag Z=1, vol
                                                            ta para o laço. Sen
                                                            ão continua executa



ARM Macro Assembler    Page 6 


                                                            ndo
  132 0000003E         
  133 0000003E         ; 2. Limpar o AMSEL para desabilitar a analógica
  134 0000003E F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para desabil
                                                            itar a função analó
                                                            gica
  135 00000042 486B            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta J
  136 00000044 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            J da memória
  137 00000046         
  138 00000046 486B            LDR              R0, =GPIO_PORTQ_AMSEL_R ;Carreg
                                                            a o R0 com o endere
                                                            ço do AMSEL para a 
                                                            porta Q
  139 00000048 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            Q da memória
  140 0000004A         
  141 0000004A 486B            LDR              R0, =GPIO_PORTB_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta B
  142 0000004C 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            B da memória
  143 0000004E         
  144 0000004E 486B            LDR              R0, =GPIO_PORTA_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta B
  145 00000050 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            B da memória
  146 00000052         
  147 00000052 486B            LDR              R0, =GPIO_PORTP_AMSEL_R ;Carreg
                                                            a o R0 com o endere
                                                            ço do AMSEL para a 
                                                            porta P
  148 00000054 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            P da memória
  149 00000056         ; 3. Limpar PCTL para selecionar o GPIO
  150 00000056 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para selecio
                                                            nar o modo GPIO
  151 0000005A 486A            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta J
  152 0000005C 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta J
                                                             da memória
  153 0000005E         
  154 0000005E 486A            LDR              R0, =GPIO_PORTQ_PCTL_R ;Carrega



ARM Macro Assembler    Page 7 


                                                             o R0 com o endereç
                                                            o do PCTL para a po
                                                            rta Q
  155 00000060 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta Q
                                                             da memória
  156 00000062         
  157 00000062 486A            LDR              R0, =GPIO_PORTB_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta B
  158 00000064 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta B
                                                             da memória
  159 00000066         
  160 00000066 486A            LDR              R0, =GPIO_PORTA_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta A
  161 00000068 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta A
                                                             da memória
  162 0000006A         
  163 0000006A 486A            LDR              R0, =GPIO_PORTP_PCTL_R ;Carrega
                                                             o R0 com o endereç
                                                            o do PCTL para a po
                                                            rta P
  164 0000006C 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta P
                                                             da memória
  165 0000006E         ; 4. DIR para 0 se for entrada, 1 se for saída
  166 0000006E 486A            LDR              R0, =GPIO_PORTQ_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta Q
  167 00000070 F04F 010F       MOV              R1, #2_00001111 ; PQ0:PQ3
  168 00000074 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor
  169 00000076         ; O certo era verificar os outros bits da PF para não tr
                       ansformar entradas em saídas desnecessárias
  170 00000076 4869            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta J
  171 00000078 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com saída
  172 0000007C 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta J
                                                             da memória
  173 0000007E         
  174 0000007E 4868            LDR              R0, =GPIO_PORTB_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta B
  175 00000080 F04F 0130       MOV              R1, #2_00110000 ;PB4 e PB5
  176 00000084 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor
  177 00000086         



ARM Macro Assembler    Page 8 


  178 00000086 4867            LDR              R0, =GPIO_PORTA_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta A
  179 00000088 F04F 01F0       MOV              R1, #2_11110000 ;PA4:PA7
  180 0000008C 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor
  181 0000008E         
  182 0000008E 4866            LDR              R0, =GPIO_PORTP_DIR_R ;Carrega 
                                                            o R0 com o endereço
                                                             do DIR para a port
                                                            a P
  183 00000090 F04F 0120       MOV              R1, #2_00100000 ;PP5
  184 00000094 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor
  185 00000096         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  186 00000096         ;    Sem função alternativa
  187 00000096 F04F 0100       MOV              R1, #0x00   ;Colocar o valor 0 
                                                            para não setar funç
                                                            ão alternativa
  188 0000009A 4864            LDR              R0, =GPIO_PORTQ_AFSEL_R ;Carreg
                                                            a o endereço do AFS
                                                            EL da porta Q
  189 0000009C 6001            STR              R1, [R0]    ;Escreve na porta
  190 0000009E         
  191 0000009E 4864            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do
                                                             AFSEL da porta J
  192 000000A0 6001            STR              R1, [R0]    ;Escreve na porta
  193 000000A2         
  194 000000A2 4864            LDR              R0, =GPIO_PORTB_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do
                                                             AFSEL da porta B
  195 000000A4 6001            STR              R1, [R0]    ;Escreve na porta
  196 000000A6         
  197 000000A6 4864            LDR              R0, =GPIO_PORTA_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do
                                                             AFSEL da porta A
  198 000000A8 6001            STR              R1, [R0]    ;Escreve na porta
  199 000000AA         
  200 000000AA 4864            LDR              R0, =GPIO_PORTP_AFSEL_R ;Carreg
                                                            a o endereço do AFS
                                                            EL na porta P
  201 000000AC 6001            STR              R1, [R0]    ;Escreve na porta
  202 000000AE         ; 6. Setar os bits de DEN para habilitar I/O digital
  203 000000AE 4864            LDR              R0, =GPIO_PORTQ_DEN_R ;Carrega 
                                                            o endereço do DEN
  204 000000B0 F04F 010F       MOV              R1, #2_00001111 ;Ativa os pinos
                                                             PQ0:PQ3 como I/O D
                                                            igital
  205 000000B4 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                             
  206 000000B6         
  207 000000B6 4863            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN
  208 000000B8 F04F 0103       MOV              R1, #2_00000011 ;Ativa os pinos



ARM Macro Assembler    Page 9 


                                                             PJ0  como I/O Digi
                                                            tal      
  209 000000BC 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                            
  210 000000BE         
  211 000000BE 4862            LDR              R0, =GPIO_PORTB_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN
  212 000000C0 F04F 0130       MOV              R1, #2_00110000 ;Setar os pinos
                                                             PB4 e PB5
  213 000000C4 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                             
  214 000000C6         
  215 000000C6 4861            LDR              R0, =GPIO_PORTA_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN
  216 000000C8 F04F 01F0       MOV              R1, #2_11110000 ;Setar os pinos
                                                             PA0:PA3
  217 000000CC 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                             
  218 000000CE         
  219 000000CE 4860            LDR              R0, =GPIO_PORTP_DEN_R ;Carrega 
                                                            o endereço do DEN
  220 000000D0 F04F 0120       MOV              R1, #2_00100000 
                                                            ;Setar o pino PP5
  221 000000D4 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador de memória fun
                                                            cionalidade digital
                                                            
  222 000000D6         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  223 000000D6 485F            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ;Carr
                                                            ega o endereço do P
                                                            UR para a porta J
  224 000000D8 F04F 0103       MOV              R1, #2_00000011 ;Habilitar func
                                                            ionalidade digital 
                                                            de resistor de pull
                                                            -up 
  225 000000DC         ;nos bits 0 e 1
  226 000000DC 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória do 
                                                            resistor de pull-up
                                                            
  227 000000DE         
  228 000000DE         ;retorno            
  229 000000DE 4770            BX               LR
  230 000000E0         
  231 000000E0         ; ------------------------------------------------------
                       -------------------------
  232 000000E0         
  233 000000E0         PortB_Output
  234 000000E0 495D            LDR              R1, =GPIO_PORTB_AHB_DATA_R ;Car
                                                            rega o valor do off



ARM Macro Assembler    Page 10 


                                                            set do data registe
                                                            r
  235 000000E2         ;Read-Modify-Write para escrita
  236 000000E2 680A            LDR              R2, [R1]
  237 000000E4 F022 0230       BIC              R2, #2_00110000 ;Limpar bits li
                                                            dos da porta 110011
                                                            11
  238 000000E8 EA40 0002       ORR              R0, R0, R2  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                            
  239 000000EC 6008            STR              R0, [R1]    ;Escreve na porta B
                                                             o barramento de da
                                                            dos dos pinos N1
  240 000000EE 4770            BX               LR          ;Retorno
  241 000000F0         
  242 000000F0         ; ------------------------------------------------------
                       -------------------------
  243 000000F0         
  244 000000F0         PortP_Output
  245 000000F0 495A            LDR              R1, =GPIO_PORTP_DATA_R ;Carrega
                                                             o valor do offset 
                                                            do data register
  246 000000F2         ;Read-Modify-Write para escrita
  247 000000F2 680A            LDR              R2, [R1]
  248 000000F4 F022 0220       BIC              R2, #2_00100000 ;Limpar bits li
                                                            dos da porta 110011
                                                            11
  249 000000F8 EA40 0002       ORR              R0, R0, R2  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                            
  250 000000FC 6008            STR              R0, [R1]    ;Escreve na porta B
                                                             o barramento de da
                                                            dos dos pinos N1
  251 000000FE 4770            BX               LR
  252 00000100         
  253 00000100         ; ------------------------------------------------------
                       -------------------------
  254 00000100         
  255 00000100         ; Função PortJ_Input
  256 00000100         ; Parâmetro de entrada: Não tem
  257 00000100         ; Parâmetro de saída: R0 --> o valor da leitura
  258 00000100         PortJ_Input
  259 00000100 4957            LDR              R1, =GPIO_PORTJ_AHB_DATA_R ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r
  260 00000102 F8D1 8000       LDR              R8, [R1]    ;Lê no barramento d
                                                            e dados dos pinos [
                                                            J1-J0]
  261 00000106 B500            PUSH             {LR}
  262 00000108 F04F 000F       MOV              R0, #15
  263 0000010C F7FF FFFE       BL               SysTick_Wait1ms
  264 00000110 F85D EB04       POP              {LR}
  265 00000114 F8D1 C000       LDR              R12, [R1]
  266 00000118 45C4            CMP              R12, R8
  267 0000011A BF88            IT               HI
  268 0000011C 4640            MOVHI            R0, R8



ARM Macro Assembler    Page 11 


  269 0000011E 4770            BX               LR          ;Retorno
  270 00000120         
  271 00000120         ; ------------------------------------------------------
                       -------------------------
  272 00000120         
  273 00000120         LED_Output
  274 00000120 B500            PUSH             {LR}
  275 00000122 4950            LDR              R1, =GPIO_PORTA_AHB_DATA_R ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r
  276 00000124 4A50            LDR              R2, =GPIO_PORTQ_DATA_R ;Carrega
                                                             o valor do offset 
                                                            do data register
  277 00000126         
  278 00000126 680B            LDR              R3, [R1]
  279 00000128 6810            LDR              R0, [R2]
  280 0000012A         
  281 0000012A         
  282 0000012A 2C00            CMP              R4, #0      ; verifica se é a v
                                                            ez da primeira dupl
                                                            a de leds piscar
  283 0000012C BF04            ITT              EQ
  284 0000012E 2380            MOVEQ            R3, #2_10000000 ; se sim, carre
                                                            ga em R3 e R4 os bi
                                                            ts dos leds que dev
                                                            em piscar
  285 00000130 2001            MOVEQ            R0, #2_00000001
  286 00000132         
  287 00000132 2C01            CMP              R4, #1      ; verifica se é a v
                                                            ez da segunda dupla
                                                             de leds piscar
  288 00000134 BF04            ITT              EQ
  289 00000136 2340            MOVEQ            R3, #2_01000000 ; se sim, carre
                                                            ga em R3 e R4 os bi
                                                            ts dos leds que dev
                                                            em piscar
  290 00000138 2002            MOVEQ            R0, #2_00000010
  291 0000013A         
  292 0000013A 2C02            CMP              R4, #2      ; verifica se é a v
                                                            ez da terceira dupl
                                                            a de leds piscar
  293 0000013C BF04            ITT              EQ
  294 0000013E 2320            MOVEQ            R3, #2_00100000 ; se sim, carre
                                                            ga em R3 e R4 os bi
                                                            ts dos leds que dev
                                                            em piscar
  295 00000140 2004            MOVEQ            R0, #2_00000100
  296 00000142         
  297 00000142 2C03            CMP              R4, #3      ; verifica se é a v
                                                            ez da quarta dupla 
                                                            de leds piscar
  298 00000144 BF04            ITT              EQ
  299 00000146 2310            MOVEQ            R3, #2_00010000 ; se sim, carre
                                                            ga em R3 e R4 os bi
                                                            ts dos leds que dev
                                                            em piscar
  300 00000148 2008            MOVEQ            R0, #2_00001000
  301 0000014A         



ARM Macro Assembler    Page 12 


  302 0000014A 2C04            CMP              R4, #4      ; verifica se é a v
                                                            ez da quarta dupla 
                                                            de leds piscar
  303 0000014C BF04            ITT              EQ
  304 0000014E 2310            MOVEQ            R3, #2_00010000 ; se sim, carre
                                                            ga em R3 e R4 os bi
                                                            ts dos leds que dev
                                                            em piscar
  305 00000150 2008            MOVEQ            R0, #2_00001000
  306 00000152         
  307 00000152 2C05            CMP              R4, #5      ; verifica se é a v
                                                            ez da quarta dupla 
                                                            de leds piscar
  308 00000154 BF04            ITT              EQ
  309 00000156 2320            MOVEQ            R3, #2_00100000 ; se sim, carre
                                                            ga em R3 e R4 os bi
                                                            ts dos leds que dev
                                                            em piscar
  310 00000158 2004            MOVEQ            R0, #2_00000100
  311 0000015A         
  312 0000015A 2C06            CMP              R4, #6      ; verifica se é a v
                                                            ez da quarta dupla 
                                                            de leds piscar
  313 0000015C BF04            ITT              EQ
  314 0000015E 2340            MOVEQ            R3, #2_01000000 ; se sim, carre
                                                            ga em R3 e R4 os bi
                                                            ts dos leds que dev
                                                            em piscar
  315 00000160 2002            MOVEQ            R0, #2_00000010
  316 00000162         
  317 00000162 2C07            CMP              R4, #7      ; verifica se é a v
                                                            ez da quarta dupla 
                                                            de leds piscar
  318 00000164 BF04            ITT              EQ
  319 00000166 2380            MOVEQ            R3, #2_10000000 ; se sim, carre
                                                            ga em R3 e R4 os bi
                                                            ts dos leds que dev
                                                            em piscar
  320 00000168 2001            MOVEQ            R0, #2_00000001
  321 0000016A 600B            STR              R3, [R1]    ; carrega no DATA d
                                                            o portA o bit do le
                                                            d da esquerda que d
                                                            eve piscar
  322 0000016C 6010            STR              R0, [R2]    ; carrega no DATA d
                                                            o portQ o bit do le
                                                            d da direita que de
                                                            ve piscar
  323 0000016E         
  324 0000016E F7FF FFFE       BL               Pisca_Transistor_PP5 ; chama a 
                                                            subrotina para pisc
                                                            ar o transistor dos
                                                             leds
  325 00000172 F85D EB04       POP              {LR}
  326 00000176 4770            BX               LR
  327 00000178         
  328 00000178         ; ------------------------------------------------------
                       -------------------------
  329 00000178         
  330 00000178         Display_Output



ARM Macro Assembler    Page 13 


  331 00000178 B500            PUSH             {LR}
  332 0000017A         
  333 0000017A F04F 0A0A       MOV              R10, #10
  334 0000017E FBB7 FBFA       UDIV             R11, R7, R10 ; divide o valor t
                                                            otal por 10, result
                                                            ando no algarismo d
                                                            a dezena no R11
  335 00000182 FB0B 7C1A       MLS              R12, R11, R10, R7 ; multiplica 
                                                            o algarismo da deze
                                                            na por 10, e diminu
                                                            i isso do valor tot
                                                            al, resultando no a
                                                            lgarismo da unidade
                                                             no R12
  336 00000186 4839            LDR              R0, =MAPEAMENTO_7SEG
  337 00000188         
  338 00000188         ; -------------- display das dezenas ---------------
  339 00000188         ; faz a função do PortA_Output
  340 00000188 4936            LDR              R1, =GPIO_PORTA_AHB_DATA_R ; ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er  
  341 0000018A F810 300B       LDRB             R3, [R0, R11] ; carrega em R3 o
                                                             valor mapeado para
                                                             o display das deze
                                                            nas
  342 0000018E 680A            LDR              R2, [R1]    ; carrega em R2 o v
                                                            alor DATA do portA
  343 00000190 F022 02F0       BIC              R2, #2_11110000 ; AND negado bi
                                                            t a bit para manter
                                                             os valores anterio
                                                            res e limpar soment
                                                            e os bits necessari
                                                            os
  344 00000194 EA43 0302       ORR              R3, R3, R2  ; OR bit a bit para
                                                             manter os valores 
                                                            anteriores e setar 
                                                            somente os bits nec
                                                            essarios
  345 00000198 600B            STR              R3, [R1]    ; carrega em R3 o v
                                                            alor atualizado do 
                                                            DATA do portA
  346 0000019A         
  347 0000019A         ; faz a função do PortQ_Output
  348 0000019A 4933            LDR              R1, =GPIO_PORTQ_DATA_R ; carreg
                                                            a o valor do offset
                                                             do data register
  349 0000019C F810 300B       LDRB             R3, [R0, R11] ; carrega em R3 o
                                                             valor mapeado para
                                                             o display das deze
                                                            nas
  350 000001A0 680A            LDR              R2, [R1]    ; carrega em R2 o v
                                                            alor DATA do portQ
  351 000001A2 F022 020F       BIC              R2, #2_00001111 ; AND negado bi
                                                            t a bit para manter
                                                             os valores anterio
                                                            res e limpar soment
                                                            e os bits necessari
                                                            os



ARM Macro Assembler    Page 14 


  352 000001A6 EA43 0302       ORR              R3, R3, R2  ; OR bit a bit para
                                                             mantes os valores 
                                                            anteriores e setar 
                                                            somente os bits nec
                                                            essarios
  353 000001AA 600B            STR              R3, [R1]    ; carrega em R3 o v
                                                            alor atualizado do 
                                                            DATA do portQ
  354 000001AC         
  355 000001AC F7FF FFFE       BL               Pisca_Transistor_PB4 ; chama a 
                                                            subrotina para pisc
                                                            ar o transistor do 
                                                            DS1
  356 000001B0 F85D EB04       POP              {LR}
  357 000001B4         
  358 000001B4         ; -------------- display das unidades (mesma coisa do di
                       splay das dezenas) ---------------
  359 000001B4 B500            PUSH             {LR}
  360 000001B6         ; faz a função do PortA_Output
  361 000001B6 482D            LDR              R0, =MAPEAMENTO_7SEG
  362 000001B8 492A            LDR              R1, =GPIO_PORTA_AHB_DATA_R ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r  
  363 000001BA F810 300C       LDRB             R3, [R0, R12]
  364 000001BE 680A            LDR              R2, [R1]
  365 000001C0 F022 02F0       BIC              R2, #2_11110000
  366 000001C4 EA43 0302       ORR              R3, R3, R2
  367 000001C8 600B            STR              R3, [R1]
  368 000001CA         
  369 000001CA         ; faz a função do PortQ_Output
  370 000001CA 4927            LDR              R1, =GPIO_PORTQ_DATA_R
  371 000001CC F810 300C       LDRB             R3, [R0, R12]
  372 000001D0 680A            LDR              R2, [R1]
  373 000001D2 F022 020F       BIC              R2, #2_00001111
  374 000001D6 EA43 0302       ORR              R3, R3, R2
  375 000001DA 600B            STR              R3, [R1]
  376 000001DC         
  377 000001DC F7FF FFFE       BL               Pisca_Transistor_PB5 ; chama a 
                                                            subrotina para pisc
                                                            ar o transistor do 
                                                            DS2
  378 000001E0 F85D EB04       POP              {LR}
  379 000001E4         
  380 000001E4 4770            BX               LR
  381 000001E6         
  382 000001E6 00 00           ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  383 000001E8                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40060528 
              40066528 
              40059528 
              40058528 
              40065528 
              4006052C 
              4006652C 



ARM Macro Assembler    Page 15 


              4005952C 
              4005852C 
              4006552C 
              40066400 
              40060400 
              40059400 
              40058400 
              40065400 
              40066420 
              40060420 
              40059420 
              40058420 
              40065420 
              4006651C 
              4006051C 
              4005951C 
              4005851C 
              4006551C 
              40060510 
              400593FC 
              400653FC 
              400603FC 
              400583FC 
              400663FC 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\gpio.d -o.\objects\gpio.o -IC:\Users\Arthur\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 539" --predefine="TM4C1294NCPDT SETA 1" --l
ist=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 85 in file gpio.s
   Uses
      None
Comment: .text unused
Display_Output 00000178

Symbol: Display_Output
   Definitions
      At line 330 in file gpio.s
   Uses
      At line 93 in file gpio.s
Comment: Display_Output used once
EsperaGPIO 00000024

Symbol: EsperaGPIO
   Definitions
      At line 124 in file gpio.s
   Uses
      At line 131 in file gpio.s
Comment: EsperaGPIO used once
GPIO_Init 0000000A

Symbol: GPIO_Init
   Definitions
      At line 109 in file gpio.s
   Uses
      At line 88 in file gpio.s
Comment: GPIO_Init used once
LED_Output 00000120

Symbol: LED_Output
   Definitions
      At line 273 in file gpio.s
   Uses
      At line 92 in file gpio.s
Comment: LED_Output used once
MAPEAMENTO_7SEG 00000000

Symbol: MAPEAMENTO_7SEG
   Definitions
      At line 103 in file gpio.s
   Uses
      At line 336 in file gpio.s
      At line 361 in file gpio.s

PortB_Output 000000E0

Symbol: PortB_Output
   Definitions
      At line 233 in file gpio.s
   Uses
      At line 89 in file gpio.s
Comment: PortB_Output used once
PortJ_Input 00000100




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: PortJ_Input
   Definitions
      At line 258 in file gpio.s
   Uses
      At line 90 in file gpio.s
Comment: PortJ_Input used once
PortP_Output 000000F0

Symbol: PortP_Output
   Definitions
      At line 244 in file gpio.s
   Uses
      At line 91 in file gpio.s
Comment: PortP_Output used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA 00000001

Symbol: GPIO_PORTA
   Definitions
      At line 30 in file gpio.s
   Uses
      At line 119 in file gpio.s
      At line 128 in file gpio.s

GPIO_PORTA_AHB_AFSEL_R 40058420

Symbol: GPIO_PORTA_AHB_AFSEL_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 197 in file gpio.s
Comment: GPIO_PORTA_AHB_AFSEL_R used once
GPIO_PORTA_AHB_AMSEL_R 40058528

Symbol: GPIO_PORTA_AHB_AMSEL_R
   Definitions
      At line 22 in file gpio.s
   Uses
      At line 144 in file gpio.s
Comment: GPIO_PORTA_AHB_AMSEL_R used once
GPIO_PORTA_AHB_CR_R 40058524

Symbol: GPIO_PORTA_AHB_CR_R
   Definitions
      At line 21 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_CR_R unused
GPIO_PORTA_AHB_DATA_BITS_R 40058000

Symbol: GPIO_PORTA_AHB_DATA_BITS_R
   Definitions
      At line 29 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_DATA_BITS_R unused
GPIO_PORTA_AHB_DATA_R 400583FC

Symbol: GPIO_PORTA_AHB_DATA_R
   Definitions
      At line 28 in file gpio.s
   Uses
      At line 275 in file gpio.s
      At line 340 in file gpio.s
      At line 362 in file gpio.s

GPIO_PORTA_AHB_DEN_R 4005851C

Symbol: GPIO_PORTA_AHB_DEN_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 215 in file gpio.s
Comment: GPIO_PORTA_AHB_DEN_R used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_AHB_DIR_R 40058400

Symbol: GPIO_PORTA_AHB_DIR_R
   Definitions
      At line 24 in file gpio.s
   Uses
      At line 178 in file gpio.s
Comment: GPIO_PORTA_AHB_DIR_R used once
GPIO_PORTA_AHB_LOCK_R 40058520

Symbol: GPIO_PORTA_AHB_LOCK_R
   Definitions
      At line 20 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_LOCK_R unused
GPIO_PORTA_AHB_PCTL_R 4005852C

Symbol: GPIO_PORTA_AHB_PCTL_R
   Definitions
      At line 23 in file gpio.s
   Uses
      At line 160 in file gpio.s
Comment: GPIO_PORTA_AHB_PCTL_R used once
GPIO_PORTA_AHB_PUR_R 40058510

Symbol: GPIO_PORTA_AHB_PUR_R
   Definitions
      At line 27 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_PUR_R unused
GPIO_PORTB 00000002

Symbol: GPIO_PORTB
   Definitions
      At line 67 in file gpio.s
   Uses
      At line 118 in file gpio.s
      At line 127 in file gpio.s

GPIO_PORTB_AHB_AFSEL_R 40059420

Symbol: GPIO_PORTB_AHB_AFSEL_R
   Definitions
      At line 62 in file gpio.s
   Uses
      At line 194 in file gpio.s
Comment: GPIO_PORTB_AHB_AFSEL_R used once
GPIO_PORTB_AHB_AMSEL_R 40059528

Symbol: GPIO_PORTB_AHB_AMSEL_R
   Definitions
      At line 59 in file gpio.s
   Uses
      At line 141 in file gpio.s
Comment: GPIO_PORTB_AHB_AMSEL_R used once
GPIO_PORTB_AHB_CR_R 40059524




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTB_AHB_CR_R
   Definitions
      At line 58 in file gpio.s
   Uses
      None
Comment: GPIO_PORTB_AHB_CR_R unused
GPIO_PORTB_AHB_DATA_BITS_R 40059000

Symbol: GPIO_PORTB_AHB_DATA_BITS_R
   Definitions
      At line 66 in file gpio.s
   Uses
      None
Comment: GPIO_PORTB_AHB_DATA_BITS_R unused
GPIO_PORTB_AHB_DATA_R 400593FC

Symbol: GPIO_PORTB_AHB_DATA_R
   Definitions
      At line 65 in file gpio.s
   Uses
      At line 234 in file gpio.s
Comment: GPIO_PORTB_AHB_DATA_R used once
GPIO_PORTB_AHB_DEN_R 4005951C

Symbol: GPIO_PORTB_AHB_DEN_R
   Definitions
      At line 63 in file gpio.s
   Uses
      At line 211 in file gpio.s
Comment: GPIO_PORTB_AHB_DEN_R used once
GPIO_PORTB_AHB_DIR_R 40059400

Symbol: GPIO_PORTB_AHB_DIR_R
   Definitions
      At line 61 in file gpio.s
   Uses
      At line 174 in file gpio.s
Comment: GPIO_PORTB_AHB_DIR_R used once
GPIO_PORTB_AHB_LOCK_R 40059520

Symbol: GPIO_PORTB_AHB_LOCK_R
   Definitions
      At line 57 in file gpio.s
   Uses
      None
Comment: GPIO_PORTB_AHB_LOCK_R unused
GPIO_PORTB_AHB_PCTL_R 4005952C

Symbol: GPIO_PORTB_AHB_PCTL_R
   Definitions
      At line 60 in file gpio.s
   Uses
      At line 157 in file gpio.s
Comment: GPIO_PORTB_AHB_PCTL_R used once
GPIO_PORTB_AHB_PUR_R 40059510

Symbol: GPIO_PORTB_AHB_PUR_R
   Definitions
      At line 64 in file gpio.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIO_PORTB_AHB_PUR_R unused
GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 42 in file gpio.s
   Uses
      At line 117 in file gpio.s
      At line 126 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 38 in file gpio.s
   Uses
      At line 191 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 35 in file gpio.s
   Uses
      At line 135 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 34 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 41 in file gpio.s
   Uses
      At line 259 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_R used once
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 39 in file gpio.s
   Uses
      At line 207 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 37 in file gpio.s
   Uses
      At line 170 in file gpio.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 33 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 36 in file gpio.s
   Uses
      At line 151 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 40 in file gpio.s
   Uses
      At line 223 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTP 00002000

Symbol: GPIO_PORTP
   Definitions
      At line 80 in file gpio.s
   Uses
      At line 120 in file gpio.s
      At line 129 in file gpio.s

GPIO_PORTP_AFSEL_R 40065420

Symbol: GPIO_PORTP_AFSEL_R
   Definitions
      At line 75 in file gpio.s
   Uses
      At line 200 in file gpio.s
Comment: GPIO_PORTP_AFSEL_R used once
GPIO_PORTP_AMSEL_R 40065528

Symbol: GPIO_PORTP_AMSEL_R
   Definitions
      At line 72 in file gpio.s
   Uses
      At line 147 in file gpio.s
Comment: GPIO_PORTP_AMSEL_R used once
GPIO_PORTP_CR_R 40065524

Symbol: GPIO_PORTP_CR_R
   Definitions
      At line 71 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_CR_R unused
GPIO_PORTP_DATA_BITS_R 40065000



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTP_DATA_BITS_R
   Definitions
      At line 79 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_DATA_BITS_R unused
GPIO_PORTP_DATA_R 400653FC

Symbol: GPIO_PORTP_DATA_R
   Definitions
      At line 78 in file gpio.s
   Uses
      At line 245 in file gpio.s
Comment: GPIO_PORTP_DATA_R used once
GPIO_PORTP_DEN_R 4006551C

Symbol: GPIO_PORTP_DEN_R
   Definitions
      At line 76 in file gpio.s
   Uses
      At line 219 in file gpio.s
Comment: GPIO_PORTP_DEN_R used once
GPIO_PORTP_DIR_R 40065400

Symbol: GPIO_PORTP_DIR_R
   Definitions
      At line 74 in file gpio.s
   Uses
      At line 182 in file gpio.s
Comment: GPIO_PORTP_DIR_R used once
GPIO_PORTP_LOCK_R 40065520

Symbol: GPIO_PORTP_LOCK_R
   Definitions
      At line 70 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_LOCK_R unused
GPIO_PORTP_PCTL_R 4006552C

Symbol: GPIO_PORTP_PCTL_R
   Definitions
      At line 73 in file gpio.s
   Uses
      At line 163 in file gpio.s
Comment: GPIO_PORTP_PCTL_R used once
GPIO_PORTP_PUR_R 40065510

Symbol: GPIO_PORTP_PUR_R
   Definitions
      At line 77 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_PUR_R unused
GPIO_PORTQ 00004000

Symbol: GPIO_PORTQ
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 54 in file gpio.s
   Uses
      At line 116 in file gpio.s
      At line 125 in file gpio.s

GPIO_PORTQ_AFSEL_R 40066420

Symbol: GPIO_PORTQ_AFSEL_R
   Definitions
      At line 50 in file gpio.s
   Uses
      At line 188 in file gpio.s
Comment: GPIO_PORTQ_AFSEL_R used once
GPIO_PORTQ_AMSEL_R 40066528

Symbol: GPIO_PORTQ_AMSEL_R
   Definitions
      At line 47 in file gpio.s
   Uses
      At line 138 in file gpio.s
Comment: GPIO_PORTQ_AMSEL_R used once
GPIO_PORTQ_CR_R 40066524

Symbol: GPIO_PORTQ_CR_R
   Definitions
      At line 46 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_CR_R unused
GPIO_PORTQ_DATA_R 400663FC

Symbol: GPIO_PORTQ_DATA_R
   Definitions
      At line 53 in file gpio.s
   Uses
      At line 276 in file gpio.s
      At line 348 in file gpio.s
      At line 370 in file gpio.s

GPIO_PORTQ_DEN_R 4006651C

Symbol: GPIO_PORTQ_DEN_R
   Definitions
      At line 51 in file gpio.s
   Uses
      At line 203 in file gpio.s
Comment: GPIO_PORTQ_DEN_R used once
GPIO_PORTQ_DIR_R 40066400

Symbol: GPIO_PORTQ_DIR_R
   Definitions
      At line 49 in file gpio.s
   Uses
      At line 166 in file gpio.s
Comment: GPIO_PORTQ_DIR_R used once
GPIO_PORTQ_LOCK_R 40066520

Symbol: GPIO_PORTQ_LOCK_R
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 45 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_LOCK_R unused
GPIO_PORTQ_PCTL_R 4006652C

Symbol: GPIO_PORTQ_PCTL_R
   Definitions
      At line 48 in file gpio.s
   Uses
      At line 154 in file gpio.s
Comment: GPIO_PORTQ_PCTL_R used once
GPIO_PORTQ_PUR_R 40066510

Symbol: GPIO_PORTQ_PUR_R
   Definitions
      At line 52 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_PUR_R unused
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 15 in file gpio.s
   Uses
      At line 123 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 14 in file gpio.s
   Uses
      At line 115 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
55 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Pisca_Transistor_PB4 00000000

Symbol: Pisca_Transistor_PB4
   Definitions
      At line 97 in file gpio.s
   Uses
      At line 355 in file gpio.s
Comment: Pisca_Transistor_PB4 used once
Pisca_Transistor_PB5 00000000

Symbol: Pisca_Transistor_PB5
   Definitions
      At line 98 in file gpio.s
   Uses
      At line 377 in file gpio.s
Comment: Pisca_Transistor_PB5 used once
Pisca_Transistor_PP5 00000000

Symbol: Pisca_Transistor_PP5
   Definitions
      At line 96 in file gpio.s
   Uses
      At line 324 in file gpio.s
Comment: Pisca_Transistor_PP5 used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 99 in file gpio.s
   Uses
      At line 263 in file gpio.s
Comment: SysTick_Wait1ms used once
4 symbols
404 symbols in table
