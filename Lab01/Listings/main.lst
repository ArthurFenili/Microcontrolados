


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         ; Definições de Valores
   17 00000000         
   18 00000000         
   19 00000000         ; ------------------------------------------------------
                       -------------------------
   20 00000000         ; Área de Dados - Declarações de variáveis
   21 00000000                 AREA             DATA, ALIGN=2
   22 00000000         ; Se alguma variável for chamada em outro arquivo
   23 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   24 00000000         ; partir de outro arquivo
   25 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   26 00000000         ; de <tam> bytes a partir da primeira 
   27 00000000         ; posição da RAM  
   28 00000000         
   29 00000000         ; ------------------------------------------------------
                       -------------------------
   30 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   31 00000000         ;                  código
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000         
   34 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   35 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   36 00000000         ; outro arquivo. No caso startup.s
   37 00000000         
   38 00000000         ; Se chamar alguma função externa 
   39 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   40 00000000         ; função <func>
   41 00000000                 IMPORT           PLL_Init
   42 00000000                 IMPORT           SysTick_Init
   43 00000000                 IMPORT           SysTick_Wait1ms
   44 00000000                 IMPORT           GPIO_Init



ARM Macro Assembler    Page 2 


   45 00000000                 IMPORT           PortQ_Output
   46 00000000                 IMPORT           PortB_Output
   47 00000000                 IMPORT           PortA_Output
   48 00000000                 IMPORT           PortJ_Input
   49 00000000         
   50 00000000         ; Mapeamento dos 7 segmentos (0 a F)
   51 00000000 3F 06 5B 
              4F 66 6D 
              7D 07 7F 
              6F       MAPEAMENTO_7SEG
                               DCB              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0
x6D, 0x7D, 0x07, 0x7F, 0x6F
   52 0000000A         ; ------------------------------------------------------
                       -------------------------
   53 0000000A         ; Função main()
   54 0000000A         Start
   55 0000000A F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   56 0000000E F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   57 00000012 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   58 00000016         
   59 00000016 F8DF B024       LDR              R11, =MAPEAMENTO_7SEG ; Desloca
                                                             escolhendo o respe
                                                            ctivo número das un
                                                            idades
   60 0000001A         
   61 0000001A         MainLoop
   62 0000001A         ;Verifica_Nenhuma
   63 0000001A         ; CMP R0, #2_00000001    ;Verifica se nenhuma chave está
                        pressionada
   64 0000001A         ; BNE Verifica_SW1    ;Se o teste viu que tem pelo menos
                        alguma chave pressionada pula
   65 0000001A         ; MOV R0, #0                   ;Não acender nenhum LED
   66 0000001A         ; BL PortQ_Output
   67 0000001A         ; BL PortB_Output
   68 0000001A         ; B MainLoop      ;Se o teste viu que nenhuma chave está
                        pressionada, volta para o laço principal
   69 0000001A         ;Verifica_SW1 
   70 0000001A         ; CMP R0, #2_00000000    ;Verifica se somente a chave SW
                       1 está pressionada
   71 0000001A         
   72 0000001A F04F 0102       MOV              R1, #2      ; contador proximo 
                                                            numero
   73 0000001E         
   74 0000001E F81B A001       LDRB             R10, [R11, R1]
   75 00000022 F00A 00F0       AND              R0, R10, #2_11110000 ; Atualiza
                                                             DSDP:DSE (PA7:PA4)
                                                            
   76 00000026 F7FF FFFE       BL               PortA_Output
   77 0000002A F00A 000F       AND              R0, R10, #2_00001111 ; Atualiza
                                                             DSD:DSA (PQ3:PQ0)
   78 0000002E F7FF FFFE       BL               PortQ_Output
   79 00000032 F04F 0030       MOV              R0, #2_00110000 ; Ativa o trans



ARM Macro Assembler    Page 3 


                                                            istor do DS1 (PB4 e
                                                             PB5)
   80 00000036 F7FF FFFE       BL               PortB_Output
   81 0000003A         
   82 0000003A         
   83 0000003A         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
   84 0000003A         ; Fim do Arquivo
   85 0000003A         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
   86 0000003A 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
   87 0000003C                 END                          ;Fim do arquivo
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\suzib\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: .text unused
MAPEAMENTO_7SEG 00000000

Symbol: MAPEAMENTO_7SEG
   Definitions
      At line 51 in file main.s
   Uses
      At line 59 in file main.s
Comment: MAPEAMENTO_7SEG used once
MainLoop 0000001A

Symbol: MainLoop
   Definitions
      At line 61 in file main.s
   Uses
      None
Comment: MainLoop unused
Start 0000000A

Symbol: Start
   Definitions
      At line 54 in file main.s
   Uses
      At line 35 in file main.s
Comment: Start used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 57 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 55 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 47 in file main.s
   Uses
      At line 76 in file main.s
Comment: PortA_Output used once
PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 46 in file main.s
   Uses
      At line 80 in file main.s
Comment: PortB_Output used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 45 in file main.s
   Uses
      At line 78 in file main.s
Comment: PortQ_Output used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 56 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
8 symbols
349 symbols in table
