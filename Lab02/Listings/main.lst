


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         ; Definições de Valores
   17 00000000 00000100 
                       INVALID_DIGIT
                               EQU              256         ; Representa um díg
                                                            ito inválido do tec
                                                            lado matricial
   18 00000000         
   19 00000000         ; ------------------------------------------------------
                       -------------------------
   20 00000000         ; Área de Dados - Declarações de variáveis
   21 00000000                 AREA             DATA, ALIGN=2
   22 00000000         ; Se alguma variável for chamada em outro arquivo
   23 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   24 00000000         ; partir de outro arquivo
   25 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   26 00000000         ; de <tam> bytes a partir da primeira 
   27 00000000         ; posição da RAM  
   28 00000000         
   29 00000000         ; ------------------------------------------------------
                       -------------------------
   30 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   31 00000000         ;                  código
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000         
   34 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   35 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   36 00000000         ; outro arquivo. No caso startup.s
   37 00000000         
   38 00000000         ; Se chamar alguma função externa 
   39 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   40 00000000         ; função <func>



ARM Macro Assembler    Page 2 


   41 00000000                 IMPORT           PLL_Init
   42 00000000                 IMPORT           SysTick_Init
   43 00000000                 IMPORT           SysTick_Wait1ms
   44 00000000         
   45 00000000                 IMPORT           GPIO_Init
   46 00000000         
   47 00000000                 IMPORT           LCD_Init
   48 00000000                 IMPORT           LCD_Line2
   49 00000000                 IMPORT           LCD_Reset
   50 00000000                 IMPORT           LCD_PrintString
   51 00000000         
   52 00000000                 IMPORT           MapMatrixKeyboard
   53 00000000         
   54 00000000         
   55 00000000         ; ------------------------------------------------------
                       -------------------------
   56 00000000         ; Função main()
   57 00000000         Start
   58 00000000 F7FF FFFE       BL               PLL_Init    ; Chama a subrotina
                                                             para alterar o clo
                                                            ck do microcontrola
                                                            dor para 80MHz
   59 00000004 F7FF FFFE       BL               SysTick_Init ; Chama a subrotin
                                                            a para inicializar 
                                                            o SysTick
   60 00000008 F7FF FFFE       BL               GPIO_Init   ; Chama a subrotina
                                                             que inicializa os 
                                                            GPIO
   61 0000000C         
   62 0000000C         Reiniciar
   63 0000000C F7FF FFFE       BL               LCD_Init    ; Chama a subrotina
                                                             que inicializa o L
                                                            CD
   64 00000010 F44F 7680       MOV              R6, #INVALID_DIGIT ; R6 usado p
                                                            ara guardar o dígit
                                                            o lido do teclado
   65 00000014 F04F 0700       MOV              R7, #0      ; R7 usado para con
                                                            tar quantos dígitos
                                                             o usuário digitou
   66 00000018         
   67 00000018         
   68 00000018         MainLoop
   69 00000018 F7FF FFFE       BL               MapMatrixKeyboard ; Lê o dígito
                                                             pressionado no tec
                                                            lado e guarda em R6
                                                            
   70 0000001C F44F 7680       MOV              R6, #INVALID_DIGIT ; Depois de 
                                                            contabilizado, inva
                                                            lida R6 para evitar
                                                             erros
   71 00000020 2F0F            CMP              R7, #15     ; Verifica se 16  d
                                                            ígitos foram inseri
                                                            dos (primeira linha
                                                            ) 
   72 00000022 F43F AFFE       BEQ              LCD_Reset
   73 00000026 D0F1            BEQ              Reiniciar   ; Chama a subrotina
                                                             que inicializa o L
                                                            CD
   74 00000028 E7F6            B                MainLoop    ; Se não, retoma o 



ARM Macro Assembler    Page 3 


                                                            loop para receber o
                                                             próximo
   75 0000002A         
   76 0000002A         
   77 0000002A         ; ****************************************
   78 0000002A         ; Escrever código que lê o estado da chave, se ela estiv
                       er desativada apaga o LED
   79 0000002A         ; Se estivar ativada chama a subrotina Pisca_LED
   80 0000002A         ; ****************************************
   81 0000002A         
   82 0000002A         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
   83 0000002A         ; Fim do Arquivo
   84 0000002A         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
   85 0000002A 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
   86 0000002C                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\suzib\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000018

Symbol: MainLoop
   Definitions
      At line 68 in file main.s
   Uses
      At line 74 in file main.s
Comment: MainLoop used once
Reiniciar 0000000C

Symbol: Reiniciar
   Definitions
      At line 62 in file main.s
   Uses
      At line 73 in file main.s
Comment: Reiniciar used once
Start 00000000

Symbol: Start
   Definitions
      At line 57 in file main.s
   Uses
      At line 35 in file main.s
Comment: Start used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

INVALID_DIGIT 00000100

Symbol: INVALID_DIGIT
   Definitions
      At line 17 in file main.s
   Uses
      At line 64 in file main.s
      At line 70 in file main.s

1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 60 in file main.s
Comment: GPIO_Init used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 47 in file main.s
   Uses
      At line 63 in file main.s
Comment: LCD_Init used once
LCD_Line2 00000000

Symbol: LCD_Line2
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: LCD_Line2 unused
LCD_PrintString 00000000

Symbol: LCD_PrintString
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: LCD_PrintString unused
LCD_Reset 00000000

Symbol: LCD_Reset
   Definitions
      At line 49 in file main.s
   Uses
      At line 72 in file main.s
Comment: LCD_Reset used once
MapMatrixKeyboard 00000000

Symbol: MapMatrixKeyboard
   Definitions
      At line 52 in file main.s
   Uses
      At line 69 in file main.s
Comment: MapMatrixKeyboard used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 58 in file main.s
Comment: PLL_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 42 in file main.s
   Uses
      At line 59 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
9 symbols
349 symbols in table
