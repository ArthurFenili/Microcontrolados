


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000         ; Declarações EQU - Defines
   11 00000000         
   12 00000000 00000006 
                       LOCKED  EQU              6
   13 00000000 00000007 
                       LOCKED_MASTER
                               EQU              7
   14 00000000         
   15 00000000         ; ========================
   16 00000000         ; ========================
   17 00000000         ; Definições dos Registradores Gerais
   18 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   19 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   20 00000000         ; ========================
   21 00000000         ; Definições dos Ports
   22 00000000         ; PORT J
   23 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   24 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   25 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   26 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   27 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   28 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   29 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   30 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   31 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC



ARM Macro Assembler    Page 2 


   32 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000
   33 00000000         
   34 00000000         ; PORT K
   35 00000000 40061520 
                       GPIO_PORTK_LOCK_R
                               EQU              0x40061520
   36 00000000 40061524 
                       GPIO_PORTK_CR_R
                               EQU              0x40061524
   37 00000000 40061528 
                       GPIO_PORTK_AMSEL_R
                               EQU              0x40061528
   38 00000000 4006152C 
                       GPIO_PORTK_PCTL_R
                               EQU              0x4006152C
   39 00000000 40061400 
                       GPIO_PORTK_DIR_R
                               EQU              0x40061400
   40 00000000 40061420 
                       GPIO_PORTK_AFSEL_R
                               EQU              0x40061420
   41 00000000 4006151C 
                       GPIO_PORTK_DEN_R
                               EQU              0x4006151C
   42 00000000 40061510 
                       GPIO_PORTK_PUR_R
                               EQU              0x40061510
   43 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   44 00000000 40061000 
                       GPIO_PORTK_DATA_BITS_R
                               EQU              0x40061000
   45 00000000 00000200 
                       GPIO_PORTK
                               EQU              2_000001000000000 
                                                            ; SYSCTL_PPGPIO_P9
   46 00000000         
   47 00000000         ; PORT L
   48 00000000 40062520 
                       GPIO_PORTL_LOCK_R
                               EQU              0x40062520
   49 00000000 40062524 
                       GPIO_PORTL_CR_R
                               EQU              0x40062524
   50 00000000 40062528 
                       GPIO_PORTL_AMSEL_R
                               EQU              0x40062528
   51 00000000 4006252C 
                       GPIO_PORTL_PCTL_R
                               EQU              0x4006252C
   52 00000000 40062400 
                       GPIO_PORTL_DIR_R
                               EQU              0x40062400
   53 00000000 40062420 
                       GPIO_PORTL_AFSEL_R
                               EQU              0x40062420



ARM Macro Assembler    Page 3 


   54 00000000 4006251C 
                       GPIO_PORTL_DEN_R
                               EQU              0x4006251C
   55 00000000 40062510 
                       GPIO_PORTL_PUR_R
                               EQU              0x40062510
   56 00000000 400623FC 
                       GPIO_PORTL_DATA_R
                               EQU              0x400623FC
   57 00000000 00000400 
                       GPIO_PORTL
                               EQU              2_000010000000000 
                                                            ; SYSCTL_PPGPIO_P10
                                                            
   58 00000000         
   59 00000000         ; PORT M
   60 00000000 40063520 
                       GPIO_PORTM_LOCK_R
                               EQU              0x40063520
   61 00000000 40063524 
                       GPIO_PORTM_CR_R
                               EQU              0x40063524
   62 00000000 40063528 
                       GPIO_PORTM_AMSEL_R
                               EQU              0x40063528
   63 00000000 4006352C 
                       GPIO_PORTM_PCTL_R
                               EQU              0x4006352C
   64 00000000 40063400 
                       GPIO_PORTM_DIR_R
                               EQU              0x40063400
   65 00000000 40063420 
                       GPIO_PORTM_AFSEL_R
                               EQU              0x40063420
   66 00000000 4006351C 
                       GPIO_PORTM_DEN_R
                               EQU              0x4006351C
   67 00000000 40063510 
                       GPIO_PORTM_PUR_R
                               EQU              0x40063510
   68 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   69 00000000 00000800 
                       GPIO_PORTM
                               EQU              2_000100000000000 
                                                            ; SYSCTL_PPGPIO_P11
                                                            
   70 00000000         
   71 00000000         ; PORT N
   72 00000000 40064520 
                       GPIO_PORTN_AHB_LOCK_R
                               EQU              0x40064520
   73 00000000 40064524 
                       GPIO_PORTN_AHB_CR_R
                               EQU              0x40064524
   74 00000000 40064528 
                       GPIO_PORTN_AHB_AMSEL_R
                               EQU              0x40064528



ARM Macro Assembler    Page 4 


   75 00000000 4006452C 
                       GPIO_PORTN_AHB_PCTL_R
                               EQU              0x4006452C
   76 00000000 40064400 
                       GPIO_PORTN_AHB_DIR_R
                               EQU              0x40064400
   77 00000000 40064420 
                       GPIO_PORTN_AHB_AFSEL_R
                               EQU              0x40064420
   78 00000000 4006451C 
                       GPIO_PORTN_AHB_DEN_R
                               EQU              0x4006451C
   79 00000000 40064510 
                       GPIO_PORTN_AHB_PUR_R
                               EQU              0x40064510
   80 00000000 400643FC 
                       GPIO_PORTN_AHB_DATA_R
                               EQU              0x400643FC
   81 00000000 00001000 
                       GPIO_PORTN
                               EQU              2_001000000000000
   82 00000000         
   83 00000000         ; Interrupções
   84 00000000         
   85 00000000         ; PORT J Interrupção
   86 00000000 40060404 
                       GPIO_PORTJ_IS_R
                               EQU              0x40060404
   87 00000000 40060408 
                       GPIO_PORTJ_IBE_R
                               EQU              0x40060408
   88 00000000 4006040C 
                       GPIO_PORTJ_IEV_R
                               EQU              0x4006040C
   89 00000000 40060410 
                       GPIO_PORTJ_IM_R
                               EQU              0x40060410
   90 00000000 4006041C 
                       GPIO_PORTJ_ICR_R
                               EQU              0x4006041C
   91 00000000 E000E430 
                       NVIC_PRI12_R
                               EQU              0xE000E430
   92 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
   93 00000000         
   94 00000000         
   95 00000000         
   96 00000000         ; ------------------------------------------------------
                       -------------------------
   97 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   98 00000000         ;                  código
   99 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  100 00000000         
  101 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 



ARM Macro Assembler    Page 5 


  102 00000000                 EXPORT           GPIO_Init   ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
  103 00000000                 EXPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
  104 00000000                 EXPORT           PortK_Output ; Permite chamar P
                                                            ortK_Output de outr
                                                            o arquivo
  105 00000000                 EXPORT           PortL_Input ; Permite chamar Po
                                                            rtL_Input de outro 
                                                            arquivo
  106 00000000                 EXPORT           PortM_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo
  107 00000000         
  108 00000000         ; Se chamar alguma função externa
  109 00000000                 IMPORT           EnableInterrupts ; Chama Enable
                                                            Interrupts do arqui
                                                            vo "startup.s"     
                                                                
  110 00000000         
  111 00000000         ;-------------------------------------------------------
                       -------------------------
  112 00000000         ; Função GPIO_Init
  113 00000000         ; Parâmetro de entrada: Não tem
  114 00000000         ; Parâmetro de saída: Não tem
  115 00000000         GPIO_Init
  116 00000000         ;=====================
  117 00000000         ; ****************************************
  118 00000000         ; Escrever função de inicialização dos GPIO
  119 00000000         ; Inicializar as portas J e N
  120 00000000         ; ****************************************
  121 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
  122 00000000         ; após isso verificar no PRGPIO se a porta está pronta p
                       ara uso.
  123 00000000         ; enable clock to GPIOF at clock gating register
  124 00000000 4851            LDR              R0, =SYSCTL_RCGCGPIO_R ;Carrega
                                                             o endereço do regi
                                                            strador RCGCGPIO
  125 00000002 F44F 7180       MOV              R1, #GPIO_PORTJ ; Seta o bit da
                                                             porta J
  126 00000006 F441 7100       ORR              R1, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  127 0000000A F441 6180       ORR              R1, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  128 0000000E F441 6100       ORR              R1, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  129 00000012 6001            STR              R1, [R0]    ;Move para a memóri
                                                            a os bits das porta
                                                            s no endereço do RC
                                                            GCGPIO
  130 00000014         
  131 00000014 484D            LDR              R0, =SYSCTL_PRGPIO_R ;Carrega o
                                                             endereço do PRGPIO



ARM Macro Assembler    Page 6 


                                                             para esperar os GP
                                                            IO ficarem prontos
  132 00000016 6801    EsperaGPIO
                               LDR              R1, [R0]    ;Lê da memória o co
                                                            nteúdo do endereço 
                                                            do registrador     
                                                              
  133 00000018 F44F 7280       MOV              R2, #GPIO_PORTJ ; Seta os bits 
                                                            correspondentes às 
                                                            portas para fazer a
                                                             comparação - Seta 
                                                            o bit da porta J
  134 0000001C F442 7200       ORR              R2, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  135 00000020 F442 6280       ORR              R2, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  136 00000024 F442 6200       ORR              R2, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  137 00000028 4211            TST              R1, R2      ;ANDS de R1 com R2
  138 0000002A D0F4            BEQ              EsperaGPIO  ;Se o flag Z=1, vol
                                                            ta para o laço. Sen
                                                            ão continua executa
                                                            ndo
  139 0000002C         
  140 0000002C         ; 2. Limpar o AMSEL para desabilitar a analógica
  141 0000002C F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para desabi
                                                            litar a função anal
                                                            ógica
  142 00000030 4847            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndereço do AMSEL pa
                                                            ra a porta J
  143 00000032 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             J da memória
  144 00000034         
  145 00000034 4847            LDR              R0, =GPIO_PORTK_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            eço do AMSEL para a
                                                             porta K
  146 00000036 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             K da memória
  147 00000038         
  148 00000038 4847            LDR              R0, =GPIO_PORTL_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            eço do AMSEL para a
                                                             porta L
  149 0000003A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             L da memória
  150 0000003C         
  151 0000003C 4847            LDR              R0, =GPIO_PORTM_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            eço do AMSEL para a



ARM Macro Assembler    Page 7 


                                                             porta M
  152 0000003E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             M da memória
  153 00000040         
  154 00000040         ; 3. Limpar PCTL para selecionar o GPIO
  155 00000040 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para seleci
                                                            onar o modo GPIO
  156 00000044 4846            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dereço do PCTL para
                                                             a porta J
  157 00000046 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            J da memória
  158 00000048         
  159 00000048 4846            LDR              R0, =GPIO_PORTK_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ço do PCTL para a p
                                                            orta K
  160 0000004A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            K da memória
  161 0000004C         
  162 0000004C 4846            LDR              R0, =GPIO_PORTL_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ço do PCTL para a p
                                                            orta L
  163 0000004E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            L da memória
  164 00000050         
  165 00000050 4846            LDR              R0, =GPIO_PORTM_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ço do PCTL para a p
                                                            orta M
  166 00000052 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            M da memória
  167 00000054         
  168 00000054         ; 4. DIR para 0 se for entrada, 1 se for saída
  169 00000054         ; O certo era verificar os outros bits da PJ para não tr
                       ansformar entradas em saídas desnecessárias
  170 00000054 4846            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ereço do DIR para a
                                                             porta J
  171 00000056 F04F 0100       MOV              R1, #2_0    ; PJ0
  172 0000005A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            J da memória
  173 0000005C         
  174 0000005C 4845            LDR              R0, =GPIO_PORTK_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta K
  175 0000005E F04F 01FF       MOV              R1, #2_11111111 ; PK7:PK0 (LCD)
                                                            



ARM Macro Assembler    Page 8 


  176 00000062 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  177 00000064         
  178 00000064 4844            LDR              R0, =GPIO_PORTL_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta L
  179 00000066 F04F 0100       MOV              R1, #2_00000000 
                                                            ; PL3:PL0 (teclado)
                                                            
  180 0000006A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  181 0000006C         
  182 0000006C 4843            LDR              R0, =GPIO_PORTM_DIR_R ; Carrega
                                                             o R0 com o endereç
                                                            o do DIR para a por
                                                            ta M
  183 0000006E F04F 01F7       MOV              R1, #2_11110111 ; PM7:PM4 (tecl
                                                            ado) e PM2:PM0 (LCD
                                                            )
  184 00000072 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  185 00000074         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  186 00000074         ;    Sem função alternativa
  187 00000074 F04F 0100       MOV              R1, #0x00   ; Colocar o valor 0
                                                             para não setar fun
                                                            ção alternativa    
                                                            ; Escreve na porta
  188 00000078         
  189 00000078 4841            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ; C
                                                            arrega o endereço d
                                                            o AFSEL da porta J
  190 0000007A 6001            STR              R1, [R0]    ; Escreve na porta
  191 0000007C         
  192 0000007C 4841            LDR              R0, =GPIO_PORTK_AFSEL_R ; Carre
                                                            ga o endereço do AF
                                                            SEL da porta K
  193 0000007E 6001            STR              R1, [R0]    ; Escreve na porta
  194 00000080         
  195 00000080 4841            LDR              R0, =GPIO_PORTL_AFSEL_R ; Carre
                                                            ga o endereço do AF
                                                            SEL da porta L
  196 00000082 6001            STR              R1, [R0]    ; Escreve na porta
  197 00000084         
  198 00000084 4841            LDR              R0, =GPIO_PORTM_AFSEL_R ; Carre
                                                            ga o endereço do AF
                                                            SEL da porta M
  199 00000086 6001            STR              R1, [R0]    ; Escreve na porta
  200 00000088         ; 6. Setar os bits de DEN para habilitar I/O digital
  201 00000088         ; Escrita amigável - Read-modify-write
  202 00000088         
  203 00000088 4841            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ; Car
                                                            rega o endereço do 
                                                            DEN
  204 0000008A 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  205 0000008C F041 0101       ORR              R1, R1, #2_00000001 ; Faz o OR 
                                                            bit a bit para mant



ARM Macro Assembler    Page 9 


                                                            er os valores anter
                                                            iores e setar somen
                                                            te PJ0
  206 00000090 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  207 00000092         
  208 00000092 4840            LDR              R0, =GPIO_PORTK_DEN_R ; Carrega
                                                             o endereço do DEN
  209 00000094 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  210 00000096 F041 01FF       ORR              R1, R1, #2_11111111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PK7:PK0
  211 0000009A 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  212 0000009C         
  213 0000009C 483E            LDR              R0, =GPIO_PORTL_DEN_R ; Carrega
                                                             o endereço do DEN
  214 0000009E 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  215 000000A0 F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PL3:PL0
  216 000000A4 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  217 000000A6         
  218 000000A6 483D            LDR              R0, =GPIO_PORTM_DEN_R ; Carrega
                                                             o endereço do DEN
  219 000000A8 6801            LDR              R1, [R0]    ; Lê para carregar 
                                                            o valor anterior da
                                                             porta inteira
  220 000000AA F041 01F7       ORR              R1, R1, #2_11110111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PM7:PM4 e PM2:PM
                                                            0
  221 000000AE 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória fu
                                                            ncionalidade digita
                                                            l
  222 000000B0         
  223 000000B0         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  224 000000B0 483B            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ; Car
                                                            rega o endereço do 
                                                            PUR para a porta J



ARM Macro Assembler    Page 10 


  225 000000B2 F04F 0101       MOV              R1, #2_0001 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PJ0
  226 000000B6 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória do
                                                             resistor de pull-u
                                                            p
  227 000000B8         
  228 000000B8 483A            LDR              R0, =GPIO_PORTL_PUR_R ; Carrega
                                                             o endereço do PUR 
                                                            para a porta L
  229 000000BA F04F 010F       MOV              R1, #2_1111 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PL3:PL0
  230 000000BE 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da memória do
                                                             resistor de pull-u
                                                            p
  231 000000C0         
  232 000000C0         ; 8. Interrupções
  233 000000C0 4939            LDR              R1, =GPIO_PORTJ_IM_R
  234 000000C2 F04F 0000       MOV              R0, #2_0    ; Desabilita a inte
                                                            rrupção na porta J0
                                                            
  235 000000C6 6008            STR              R0, [R1]
  236 000000C8         
  237 000000C8 F04F 0100       MOV              R1, #2_0
  238 000000CC 4837            LDR              R0, =GPIO_PORTJ_IS_R ; 0 para i
                                                            nterrupção de borda
                                                             e 1 para nível
  239 000000CE 6001            STR              R1, [R0]
  240 000000D0         
  241 000000D0 F04F 0100       MOV              R1, #2_0
  242 000000D4 4836            LDR              R0, =GPIO_PORTJ_IBE_R ; 0 para 
                                                            borda única
  243 000000D6 6001            STR              R1, [R0]
  244 000000D8         
  245 000000D8 F04F 0100       MOV              R1, #2_0
  246 000000DC 4835            LDR              R0, =GPIO_PORTJ_IEV_R ; 0 para 
                                                            borda de descida
  247 000000DE 6001            STR              R1, [R0]
  248 000000E0         
  249 000000E0 4935            LDR              R1, =GPIO_PORTJ_ICR_R ; Configu
                                                            ra a interrupção na
                                                             porta PJ0
  250 000000E2 F04F 0001       MOV              R0, #2_1
  251 000000E6 6008            STR              R0, [R1]
  252 000000E8         
  253 000000E8 492F            LDR              R1, =GPIO_PORTJ_IM_R ; Habilita
                                                             a interrupção na p
                                                            orta J0
  254 000000EA F04F 0001       MOV              R0, #2_1
  255 000000EE 6008            STR              R0, [R1]
  256 000000F0         
  257 000000F0 4932            LDR              R1, =NVIC_PRI12_R ; Configura p
                                                            rioridade 5 nos bit
                                                            s 29 a 31



ARM Macro Assembler    Page 11 


  258 000000F2 F04F 4020       MOV              R0, #0xA0000000
  259 000000F6 6008            STR              R0, [R1]
  260 000000F8         
  261 000000F8 4931            LDR              R1, =NVIC_EN1_R ; Habilita a in
                                                            terrupção no PortJ
  262 000000FA F44F 2000       MOV              R0, #0x80000
  263 000000FE 6008            STR              R0, [R1]
  264 00000100         
  265 00000100 B500            PUSH             {LR}
  266 00000102 F7FF FFFE       BL               EnableInterrupts ; Liga a chave
                                                             das interrupções
  267 00000106 F85D EB04       POP              {LR}
  268 0000010A         
  269 0000010A 4770            BX               LR
  270 0000010C         
  271 0000010C         ; ------------------------------------------------------
                       -------------------------
  272 0000010C         ; Função PortJ_Input
  273 0000010C         ; Parâmetro de entrada: Não tem
  274 0000010C         ; Parâmetro de saída: R0 --> o valor da leitura
  275 0000010C         PortJ_Input
  276 0000010C 492D            LDR              R1, =GPIO_PORTJ_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  277 0000010E 6808            LDR              R0, [R1]    ; Lê no barramento 
                                                            de dados dos pinos
  278 00000110 4770            BX               LR          ; Retorna
  279 00000112         
  280 00000112         ; Função GPIOPortJ_Handler
  281 00000112         ; Parâmetro de entrada: Não tem
  282 00000112         ; Parâmetro de saída: R0 --> o valor a ser atualizado
  283 00000112         GPIOPortJ_Handler
  284 00000112         ; O certo seria testar se a interrupção foi causada por 
                       PJ1 ou PJ0 através do GPIORIS
  285 00000112 4929            LDR              R1, =GPIO_PORTJ_ICR_R
  286 00000114 F04F 0001       MOV              R0, #0x00000001 ; PJ0
  287 00000118 6008            STR              R0, [R1]    ; Limpa a interrupç
                                                            ão (ACK)
  288 0000011A         
  289 0000011A 2D07            CMP              R5, #LOCKED_MASTER ; Verifica s
                                                            e a interrupção aco
                                                            nteceu com o cofre 
                                                            travado com senha m
                                                            estre
  290 0000011C BF08 2506       MOVEQ            R5, #LOCKED ; Se sim, baixa o e
                                                            stado para travado 
                                                            apenas
  291 00000120         
  292 00000120 4770            BX               LR          ; Retorna
  293 00000122         
  294 00000122         
  295 00000122         ; Função PortK_Output
  296 00000122         ; Parâmetro de entrada: R0
  297 00000122         ; Parâmetro de saída:  Não tem
  298 00000122         PortK_Output
  299 00000122 4929            LDR              R1, =GPIO_PORTK_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register



ARM Macro Assembler    Page 12 


  300 00000124         ; Read-Modify-Write para escrita
  301 00000124 680A            LDR              R2, [R1]
  302 00000126 F022 02FF       BIC              R2, #2_11111111 ; Máscara com b
                                                            its 1 nas posições 
                                                            que queremos limpar
                                                             PK7:PK0
  303 0000012A EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            parâmetro de entrad
                                                            a
  304 0000012E 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            K
  305 00000130 4770            BX               LR          ; Retorna
  306 00000132         
  307 00000132         ; Função PortL_Input
  308 00000132         ; Parâmetro de entrada: Não tem
  309 00000132         ; Parâmetro de saída: R0 --> o valor da leitura
  310 00000132         PortL_Input
  311 00000132 4926            LDR              R1, =GPIO_PORTL_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  312 00000134 6808            LDR              R0, [R1]    ; Lê no barramento 
                                                            de dados dos pinos
  313 00000136 4770            BX               LR          ; Retorna
  314 00000138         
  315 00000138         ; Função PortM_Output
  316 00000138         ; Parâmetro de entrada: R0
  317 00000138         ; Parâmetro de saída:  Não tem
  318 00000138         PortM_Output
  319 00000138 4925            LDR              R1, =GPIO_PORTM_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  320 0000013A         ; Read-Modify-Write para escrita
  321 0000013A 680A            LDR              R2, [R1]
  322 0000013C F022 02F7       BIC              R2, #2_11110111 ; Máscara com b
                                                            its 1 nas posições 
                                                            que queremos limpar
                                                             PM7:PM4 e PM3:PM0
  323 00000140 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            parâmetro de entrad
                                                            a
  324 00000144 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            M
  325 00000146 4770            BX               LR          ; Retorna
  326 00000148         
  327 00000148         
  328 00000148         
  329 00000148         
  330 00000148                 ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  331 00000148                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40060528 
              40061528 
              40062528 
              40063528 



ARM Macro Assembler    Page 13 


              4006052C 
              4006152C 
              4006252C 
              4006352C 
              40060400 
              40061400 
              40062400 
              40063400 
              40060420 
              40061420 
              40062420 
              40063420 
              4006051C 
              4006151C 
              4006251C 
              4006351C 
              40060510 
              40062510 
              40060410 
              40060404 
              40060408 
              4006040C 
              4006041C 
              E000E430 
              E000E104 
              400603FC 
              400613FC 
              400623FC 
              400633FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\gpio.d -o.\objects\gpio.o -IC:\Users\suzib\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 99 in file gpio.s
   Uses
      None
Comment: .text unused
EsperaGPIO 00000016

Symbol: EsperaGPIO
   Definitions
      At line 132 in file gpio.s
   Uses
      At line 138 in file gpio.s
Comment: EsperaGPIO used once
GPIOPortJ_Handler 00000112

Symbol: GPIOPortJ_Handler
   Definitions
      At line 283 in file gpio.s
   Uses
      None
Comment: GPIOPortJ_Handler unused
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 115 in file gpio.s
   Uses
      At line 102 in file gpio.s
Comment: GPIO_Init used once
PortJ_Input 0000010C

Symbol: PortJ_Input
   Definitions
      At line 275 in file gpio.s
   Uses
      At line 103 in file gpio.s
Comment: PortJ_Input used once
PortK_Output 00000122

Symbol: PortK_Output
   Definitions
      At line 298 in file gpio.s
   Uses
      At line 104 in file gpio.s
Comment: PortK_Output used once
PortL_Input 00000132

Symbol: PortL_Input
   Definitions
      At line 310 in file gpio.s
   Uses
      At line 105 in file gpio.s
Comment: PortL_Input used once
PortM_Output 00000138

Symbol: PortM_Output



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 318 in file gpio.s
   Uses
      At line 106 in file gpio.s
Comment: PortM_Output used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 32 in file gpio.s
   Uses
      At line 125 in file gpio.s
      At line 133 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 28 in file gpio.s
   Uses
      At line 189 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 142 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 24 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 31 in file gpio.s
   Uses
      At line 276 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_R used once
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 29 in file gpio.s
   Uses
      At line 203 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 27 in file gpio.s
   Uses
      At line 170 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 23 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 156 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 30 in file gpio.s
   Uses
      At line 224 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTJ_IBE_R 40060408

Symbol: GPIO_PORTJ_IBE_R
   Definitions
      At line 87 in file gpio.s
   Uses
      At line 242 in file gpio.s
Comment: GPIO_PORTJ_IBE_R used once
GPIO_PORTJ_ICR_R 4006041C

Symbol: GPIO_PORTJ_ICR_R
   Definitions
      At line 90 in file gpio.s
   Uses
      At line 249 in file gpio.s
      At line 285 in file gpio.s

GPIO_PORTJ_IEV_R 4006040C

Symbol: GPIO_PORTJ_IEV_R
   Definitions
      At line 88 in file gpio.s
   Uses
      At line 246 in file gpio.s
Comment: GPIO_PORTJ_IEV_R used once
GPIO_PORTJ_IM_R 40060410

Symbol: GPIO_PORTJ_IM_R
   Definitions
      At line 89 in file gpio.s
   Uses
      At line 233 in file gpio.s
      At line 253 in file gpio.s

GPIO_PORTJ_IS_R 40060404

Symbol: GPIO_PORTJ_IS_R



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 86 in file gpio.s
   Uses
      At line 238 in file gpio.s
Comment: GPIO_PORTJ_IS_R used once
GPIO_PORTK 00000200

Symbol: GPIO_PORTK
   Definitions
      At line 45 in file gpio.s
   Uses
      At line 126 in file gpio.s
      At line 134 in file gpio.s

GPIO_PORTK_AFSEL_R 40061420

Symbol: GPIO_PORTK_AFSEL_R
   Definitions
      At line 40 in file gpio.s
   Uses
      At line 192 in file gpio.s
Comment: GPIO_PORTK_AFSEL_R used once
GPIO_PORTK_AMSEL_R 40061528

Symbol: GPIO_PORTK_AMSEL_R
   Definitions
      At line 37 in file gpio.s
   Uses
      At line 145 in file gpio.s
Comment: GPIO_PORTK_AMSEL_R used once
GPIO_PORTK_CR_R 40061524

Symbol: GPIO_PORTK_CR_R
   Definitions
      At line 36 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_CR_R unused
GPIO_PORTK_DATA_BITS_R 40061000

Symbol: GPIO_PORTK_DATA_BITS_R
   Definitions
      At line 44 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_DATA_BITS_R unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 43 in file gpio.s
   Uses
      At line 299 in file gpio.s
Comment: GPIO_PORTK_DATA_R used once
GPIO_PORTK_DEN_R 4006151C

Symbol: GPIO_PORTK_DEN_R
   Definitions
      At line 41 in file gpio.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 208 in file gpio.s
Comment: GPIO_PORTK_DEN_R used once
GPIO_PORTK_DIR_R 40061400

Symbol: GPIO_PORTK_DIR_R
   Definitions
      At line 39 in file gpio.s
   Uses
      At line 174 in file gpio.s
Comment: GPIO_PORTK_DIR_R used once
GPIO_PORTK_LOCK_R 40061520

Symbol: GPIO_PORTK_LOCK_R
   Definitions
      At line 35 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_LOCK_R unused
GPIO_PORTK_PCTL_R 4006152C

Symbol: GPIO_PORTK_PCTL_R
   Definitions
      At line 38 in file gpio.s
   Uses
      At line 159 in file gpio.s
Comment: GPIO_PORTK_PCTL_R used once
GPIO_PORTK_PUR_R 40061510

Symbol: GPIO_PORTK_PUR_R
   Definitions
      At line 42 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_PUR_R unused
GPIO_PORTL 00000400

Symbol: GPIO_PORTL
   Definitions
      At line 57 in file gpio.s
   Uses
      At line 127 in file gpio.s
      At line 135 in file gpio.s

GPIO_PORTL_AFSEL_R 40062420

Symbol: GPIO_PORTL_AFSEL_R
   Definitions
      At line 53 in file gpio.s
   Uses
      At line 195 in file gpio.s
Comment: GPIO_PORTL_AFSEL_R used once
GPIO_PORTL_AMSEL_R 40062528

Symbol: GPIO_PORTL_AMSEL_R
   Definitions
      At line 50 in file gpio.s
   Uses
      At line 148 in file gpio.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTL_AMSEL_R used once
GPIO_PORTL_CR_R 40062524

Symbol: GPIO_PORTL_CR_R
   Definitions
      At line 49 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_CR_R unused
GPIO_PORTL_DATA_R 400623FC

Symbol: GPIO_PORTL_DATA_R
   Definitions
      At line 56 in file gpio.s
   Uses
      At line 311 in file gpio.s
Comment: GPIO_PORTL_DATA_R used once
GPIO_PORTL_DEN_R 4006251C

Symbol: GPIO_PORTL_DEN_R
   Definitions
      At line 54 in file gpio.s
   Uses
      At line 213 in file gpio.s
Comment: GPIO_PORTL_DEN_R used once
GPIO_PORTL_DIR_R 40062400

Symbol: GPIO_PORTL_DIR_R
   Definitions
      At line 52 in file gpio.s
   Uses
      At line 178 in file gpio.s
Comment: GPIO_PORTL_DIR_R used once
GPIO_PORTL_LOCK_R 40062520

Symbol: GPIO_PORTL_LOCK_R
   Definitions
      At line 48 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_LOCK_R unused
GPIO_PORTL_PCTL_R 4006252C

Symbol: GPIO_PORTL_PCTL_R
   Definitions
      At line 51 in file gpio.s
   Uses
      At line 162 in file gpio.s
Comment: GPIO_PORTL_PCTL_R used once
GPIO_PORTL_PUR_R 40062510

Symbol: GPIO_PORTL_PUR_R
   Definitions
      At line 55 in file gpio.s
   Uses
      At line 228 in file gpio.s
Comment: GPIO_PORTL_PUR_R used once
GPIO_PORTM 00000800




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTM
   Definitions
      At line 69 in file gpio.s
   Uses
      At line 128 in file gpio.s
      At line 136 in file gpio.s

GPIO_PORTM_AFSEL_R 40063420

Symbol: GPIO_PORTM_AFSEL_R
   Definitions
      At line 65 in file gpio.s
   Uses
      At line 198 in file gpio.s
Comment: GPIO_PORTM_AFSEL_R used once
GPIO_PORTM_AMSEL_R 40063528

Symbol: GPIO_PORTM_AMSEL_R
   Definitions
      At line 62 in file gpio.s
   Uses
      At line 151 in file gpio.s
Comment: GPIO_PORTM_AMSEL_R used once
GPIO_PORTM_CR_R 40063524

Symbol: GPIO_PORTM_CR_R
   Definitions
      At line 61 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_CR_R unused
GPIO_PORTM_DATA_R 400633FC

Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 68 in file gpio.s
   Uses
      At line 319 in file gpio.s
Comment: GPIO_PORTM_DATA_R used once
GPIO_PORTM_DEN_R 4006351C

Symbol: GPIO_PORTM_DEN_R
   Definitions
      At line 66 in file gpio.s
   Uses
      At line 218 in file gpio.s
Comment: GPIO_PORTM_DEN_R used once
GPIO_PORTM_DIR_R 40063400

Symbol: GPIO_PORTM_DIR_R
   Definitions
      At line 64 in file gpio.s
   Uses
      At line 182 in file gpio.s
Comment: GPIO_PORTM_DIR_R used once
GPIO_PORTM_LOCK_R 40063520

Symbol: GPIO_PORTM_LOCK_R
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 60 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_LOCK_R unused
GPIO_PORTM_PCTL_R 4006352C

Symbol: GPIO_PORTM_PCTL_R
   Definitions
      At line 63 in file gpio.s
   Uses
      At line 165 in file gpio.s
Comment: GPIO_PORTM_PCTL_R used once
GPIO_PORTM_PUR_R 40063510

Symbol: GPIO_PORTM_PUR_R
   Definitions
      At line 67 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_PUR_R unused
GPIO_PORTN 00001000

Symbol: GPIO_PORTN
   Definitions
      At line 81 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN unused
GPIO_PORTN_AHB_AFSEL_R 40064420

Symbol: GPIO_PORTN_AHB_AFSEL_R
   Definitions
      At line 77 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_AFSEL_R unused
GPIO_PORTN_AHB_AMSEL_R 40064528

Symbol: GPIO_PORTN_AHB_AMSEL_R
   Definitions
      At line 74 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_AMSEL_R unused
GPIO_PORTN_AHB_CR_R 40064524

Symbol: GPIO_PORTN_AHB_CR_R
   Definitions
      At line 73 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_CR_R unused
GPIO_PORTN_AHB_DATA_R 400643FC

Symbol: GPIO_PORTN_AHB_DATA_R
   Definitions
      At line 80 in file gpio.s
   Uses
      None



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTN_AHB_DATA_R unused
GPIO_PORTN_AHB_DEN_R 4006451C

Symbol: GPIO_PORTN_AHB_DEN_R
   Definitions
      At line 78 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_DEN_R unused
GPIO_PORTN_AHB_DIR_R 40064400

Symbol: GPIO_PORTN_AHB_DIR_R
   Definitions
      At line 76 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_DIR_R unused
GPIO_PORTN_AHB_LOCK_R 40064520

Symbol: GPIO_PORTN_AHB_LOCK_R
   Definitions
      At line 72 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_LOCK_R unused
GPIO_PORTN_AHB_PCTL_R 4006452C

Symbol: GPIO_PORTN_AHB_PCTL_R
   Definitions
      At line 75 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_PCTL_R unused
GPIO_PORTN_AHB_PUR_R 40064510

Symbol: GPIO_PORTN_AHB_PUR_R
   Definitions
      At line 79 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_PUR_R unused
LOCKED 00000006

Symbol: LOCKED
   Definitions
      At line 12 in file gpio.s
   Uses
      At line 290 in file gpio.s
Comment: LOCKED used once
LOCKED_MASTER 00000007

Symbol: LOCKED_MASTER
   Definitions
      At line 13 in file gpio.s
   Uses
      At line 289 in file gpio.s
Comment: LOCKED_MASTER used once
NVIC_EN1_R E000E104




ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

Symbol: NVIC_EN1_R
   Definitions
      At line 92 in file gpio.s
   Uses
      At line 261 in file gpio.s
Comment: NVIC_EN1_R used once
NVIC_PRI12_R E000E430

Symbol: NVIC_PRI12_R
   Definitions
      At line 91 in file gpio.s
   Uses
      At line 257 in file gpio.s
Comment: NVIC_PRI12_R used once
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 19 in file gpio.s
   Uses
      At line 131 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 18 in file gpio.s
   Uses
      At line 124 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
62 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

EnableInterrupts 00000000

Symbol: EnableInterrupts
   Definitions
      At line 109 in file gpio.s
   Uses
      At line 266 in file gpio.s
Comment: EnableInterrupts used once
1 symbol
407 symbols in table
