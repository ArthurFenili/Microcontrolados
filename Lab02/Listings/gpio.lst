


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Template by Prof. Guilherme Peron - 24/08/2020
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instru??es do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         ; Declara??es EQU - Defines
    9 00000000         ; ========================
   10 00000000 00000100 
                       INVALID_DIGIT
                               EQU              256         ; Representa um d?g
                                                            ito inv?lido do tec
                                                            lado matricial
   11 00000000 FFFFFFFF 
                       INVALID_PW_CHAR
                               EQU              -1          ; Representa um car
                                                            actere impossível d
                                                            e estar na senha
   12 00000000 00000000 
                       INICIO  EQU              0
   13 00000000 00000001 
                       CONFIG_SENHA
                               EQU              1
   14 00000000 00000002 
                       COFRE_FECHANDO
                               EQU              2
   15 00000000 00000003 
                       COFRE_FECHADO
                               EQU              3
   16 00000000 00000004 
                       COFRE_TRAVADO
                               EQU              4
   17 00000000 00000005 
                       DESTRAVA_COFRE
                               EQU              5
   18 00000000         ; ========================
   19 00000000         ; Defini??es dos Registradores Gerais
   20 00000000         ; All register values were taken from tm4c1294ncpdt.h - 
                       TM4C1294NCPDT Register Definitions
   21 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   22 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   23 00000000         ; ========================
   24 00000000         ; Defini??es dos Ports
   25 00000000         
   26 00000000         ; PORT A
   27 00000000 40058520 
                       GPIO_PORTA_AHB_LOCK_R
                               EQU              0x40058520
   28 00000000 40058524 
                       GPIO_PORTA_AHB_CR_R
                               EQU              0x40058524



ARM Macro Assembler    Page 2 


   29 00000000 40058528 
                       GPIO_PORTA_AHB_AMSEL_R
                               EQU              0x40058528
   30 00000000 4005852C 
                       GPIO_PORTA_AHB_PCTL_R
                               EQU              0x4005852C
   31 00000000 40058400 
                       GPIO_PORTA_AHB_DIR_R
                               EQU              0x40058400
   32 00000000 40058420 
                       GPIO_PORTA_AHB_AFSEL_R
                               EQU              0x40058420
   33 00000000 4005851C 
                       GPIO_PORTA_AHB_DEN_R
                               EQU              0x4005851C
   34 00000000 40058510 
                       GPIO_PORTA_AHB_PUR_R
                               EQU              0x40058510
   35 00000000 400583FC 
                       GPIO_PORTA_AHB_DATA_R
                               EQU              0x400583FC
   36 00000000 40058000 
                       GPIO_PORTA_AHB_DATA_BITS_R
                               EQU              0x40058000
   37 00000000 00000001 
                       GPIO_PORTA
                               EQU              2_000000000000001 
                                                            ; SYSCTL_PPGPIO_P0
   38 00000000         
   39 00000000         ; PORT J
   40 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   41 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   42 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   43 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   44 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   45 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   46 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   47 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   48 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   49 00000000 40060000 
                       GPIO_PORTJ_AHB_DATA_BITS_R



ARM Macro Assembler    Page 3 


                               EQU              0x40060000
   50 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000 
                                                            ; SYSCTL_PPGPIO_P8
   51 00000000         
   52 00000000         ; PORT K
   53 00000000 40061520 
                       GPIO_PORTK_LOCK_R
                               EQU              0x40061520
   54 00000000 40061524 
                       GPIO_PORTK_CR_R
                               EQU              0x40061524
   55 00000000 40061528 
                       GPIO_PORTK_AMSEL_R
                               EQU              0x40061528
   56 00000000 4006152C 
                       GPIO_PORTK_PCTL_R
                               EQU              0x4006152C
   57 00000000 40061400 
                       GPIO_PORTK_DIR_R
                               EQU              0x40061400
   58 00000000 40061420 
                       GPIO_PORTK_AFSEL_R
                               EQU              0x40061420
   59 00000000 4006151C 
                       GPIO_PORTK_DEN_R
                               EQU              0x4006151C
   60 00000000 40061510 
                       GPIO_PORTK_PUR_R
                               EQU              0x40061510
   61 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   62 00000000 40061000 
                       GPIO_PORTK_DATA_BITS_R
                               EQU              0x40061000
   63 00000000 00000200 
                       GPIO_PORTK
                               EQU              2_000001000000000 
                                                            ; SYSCTL_PPGPIO_P9
   64 00000000         
   65 00000000         ; PORT L
   66 00000000 40062520 
                       GPIO_PORTL_LOCK_R
                               EQU              0x40062520
   67 00000000 40062524 
                       GPIO_PORTL_CR_R
                               EQU              0x40062524
   68 00000000 40062528 
                       GPIO_PORTL_AMSEL_R
                               EQU              0x40062528
   69 00000000 4006252C 
                       GPIO_PORTL_PCTL_R
                               EQU              0x4006252C
   70 00000000 40062400 
                       GPIO_PORTL_DIR_R
                               EQU              0x40062400
   71 00000000 40062420 



ARM Macro Assembler    Page 4 


                       GPIO_PORTL_AFSEL_R
                               EQU              0x40062420
   72 00000000 4006251C 
                       GPIO_PORTL_DEN_R
                               EQU              0x4006251C
   73 00000000 40062510 
                       GPIO_PORTL_PUR_R
                               EQU              0x40062510
   74 00000000 400623FC 
                       GPIO_PORTL_DATA_R
                               EQU              0x400623FC
   75 00000000 00000400 
                       GPIO_PORTL
                               EQU              2_000010000000000 
                                                            ; SYSCTL_PPGPIO_P10
                                                            
   76 00000000         
   77 00000000         ; PORT M
   78 00000000 40063520 
                       GPIO_PORTM_LOCK_R
                               EQU              0x40063520
   79 00000000 40063524 
                       GPIO_PORTM_CR_R
                               EQU              0x40063524
   80 00000000 40063528 
                       GPIO_PORTM_AMSEL_R
                               EQU              0x40063528
   81 00000000 4006352C 
                       GPIO_PORTM_PCTL_R
                               EQU              0x4006352C
   82 00000000 40063400 
                       GPIO_PORTM_DIR_R
                               EQU              0x40063400
   83 00000000 40063420 
                       GPIO_PORTM_AFSEL_R
                               EQU              0x40063420
   84 00000000 4006351C 
                       GPIO_PORTM_DEN_R
                               EQU              0x4006351C
   85 00000000 40063510 
                       GPIO_PORTM_PUR_R
                               EQU              0x40063510
   86 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   87 00000000 00000800 
                       GPIO_PORTM
                               EQU              2_000100000000000 
                                                            ; SYSCTL_PPGPIO_P11
                                                            
   88 00000000         
   89 00000000         ; PORT P
   90 00000000 40065520 
                       GPIO_PORTP_LOCK_R
                               EQU              0x40065520
   91 00000000 40065524 
                       GPIO_PORTP_CR_R
                               EQU              0x40065524
   92 00000000 40065528 



ARM Macro Assembler    Page 5 


                       GPIO_PORTP_AMSEL_R
                               EQU              0x40065528
   93 00000000 4006552C 
                       GPIO_PORTP_PCTL_R
                               EQU              0x4006552C
   94 00000000 40065400 
                       GPIO_PORTP_DIR_R
                               EQU              0x40065400
   95 00000000 40065420 
                       GPIO_PORTP_AFSEL_R
                               EQU              0x40065420
   96 00000000 4006551C 
                       GPIO_PORTP_DEN_R
                               EQU              0x4006551C
   97 00000000 40065510 
                       GPIO_PORTP_PUR_R
                               EQU              0x40065510
   98 00000000 400653FC 
                       GPIO_PORTP_DATA_R
                               EQU              0x400653FC
   99 00000000 40065000 
                       GPIO_PORTP_DATA_BITS_R
                               EQU              0x40065000
  100 00000000 00002000 
                       GPIO_PORTP
                               EQU              2_010000000000000 
                                                            ; SYSCTL_PPGPIO_P13
                                                            
  101 00000000         
  102 00000000         ; PORT Q
  103 00000000 40066520 
                       GPIO_PORTQ_LOCK_R
                               EQU              0x40066520
  104 00000000 40066524 
                       GPIO_PORTQ_CR_R
                               EQU              0x40066524
  105 00000000 40066528 
                       GPIO_PORTQ_AMSEL_R
                               EQU              0x40066528
  106 00000000 4006652C 
                       GPIO_PORTQ_PCTL_R
                               EQU              0x4006652C
  107 00000000 40066400 
                       GPIO_PORTQ_DIR_R
                               EQU              0x40066400
  108 00000000 40066420 
                       GPIO_PORTQ_AFSEL_R
                               EQU              0x40066420
  109 00000000 4006651C 
                       GPIO_PORTQ_DEN_R
                               EQU              0x4006651C
  110 00000000 40066510 
                       GPIO_PORTQ_PUR_R
                               EQU              0x40066510
  111 00000000 400663FC 
                       GPIO_PORTQ_DATA_R
                               EQU              0x400663FC
  112 00000000 40066000 
                       GPIO_PORTQ_DATA_BITS_R



ARM Macro Assembler    Page 6 


                               EQU              0x40066000
  113 00000000 00004000 
                       GPIO_PORTQ
                               EQU              2_100000000000000 
                                                            ; SYSCTL_PPGPIO_P14
                                                            
  114 00000000         
  115 00000000         ; Interrup??es
  116 00000000         
  117 00000000         ; PORT J Interrup??o
  118 00000000 40060404 
                       GPIO_PORTJ_IS_R
                               EQU              0x40060404
  119 00000000 40060408 
                       GPIO_PORTJ_IBE_R
                               EQU              0x40060408
  120 00000000 4006040C 
                       GPIO_PORTJ_IEV_R
                               EQU              0x4006040C
  121 00000000 40060410 
                       GPIO_PORTJ_IM_R
                               EQU              0x40060410
  122 00000000 4006041C 
                       GPIO_PORTJ_ICR_R
                               EQU              0x4006041C
  123 00000000 40060414 
                       GPIO_PORTJ_RIS_R
                               EQU              0x40060414
  124 00000000 E000E430 
                       NVIC_PRI12_R
                               EQU              0xE000E430
  125 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
  126 00000000         
  127 00000000         ; ------------------------------------------------------
                       -------------------------
  128 00000000         ; ?rea de C?digo - Tudo abaixo da diretiva a seguir ser?
                        armazenado na mem?ria de 
  129 00000000         ;                  c?digo
  130 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  131 00000000         
  132 00000000         ; Se alguma fun??o do arquivo for chamada em outro arqui
                       vo 
  133 00000000                 EXPORT           GPIO_Init   ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
  134 00000000                 EXPORT           PortA_Output ; Permite chamar P
                                                            ortA_Output de outr
                                                            o arquivo
  135 00000000                 EXPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
  136 00000000                 EXPORT           PortK_Output ; Permite chamar P
                                                            ortK_Output de outr
                                                            o arquivo
  137 00000000                 EXPORT           PortL_Input ; Permite chamar Po
                                                            rtL_Input de outro 



ARM Macro Assembler    Page 7 


                                                            arquivo
  138 00000000                 EXPORT           PortM_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo
  139 00000000                 EXPORT           PortP_Output ; Permite chamar P
                                                            ortP_Output de outr
                                                            o arquivo
  140 00000000                 EXPORT           PortQ_Output ; Permite chamar P
                                                            ortQ_Output de outr
                                                            o arquivo
  141 00000000                 EXPORT           GPIOPortJ_Handler ; Permite cha
                                                            mar GPIOPortJ_Handl
                                                            er de outro arquivo
                                                            
  142 00000000         
  143 00000000         ; Se chamar alguma fun??o externa
  144 00000000                 IMPORT           ModificaSenhaMestra
  145 00000000                 IMPORT           DestravaCofre
  146 00000000         
  147 00000000         ;-------------------------------------------------------
                       -------------------------
  148 00000000         ; Fun??o GPIO_Init
  149 00000000         ; Par?metro de entrada: N?o tem
  150 00000000         ; Par?metro de sa?da: N?o tem
  151 00000000         GPIO_Init
  152 00000000         ;=====================
  153 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
  154 00000000         ; ap?s isso verificar no PRGPIO se a porta est? pronta p
                       ara uso.
  155 00000000         ; enable clock to GPIOF at clock gating register
  156 00000000 487B            LDR              R0, =SYSCTL_RCGCGPIO_R ; Carreg
                                                            a o endere?o do reg
                                                            istrador RCGCGPIO
  157 00000002 F04F 0101       MOV              R1, #GPIO_PORTA ; Seta o bit da
                                                             porta A
  158 00000006 F441 7180       ORR              R1, #GPIO_PORTJ ; Seta o bit da
                                                             porta J, fazendo c
                                                            om OR
  159 0000000A F441 7100       ORR              R1, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  160 0000000E F441 6180       ORR              R1, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  161 00000012 F441 6100       ORR              R1, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  162 00000016 F441 5100       ORR              R1, #GPIO_PORTP ; Seta o bit da
                                                             porta P, fazendo c
                                                            om OR
  163 0000001A F441 4180       ORR              R1, #GPIO_PORTQ ; Seta o bit da
                                                             porta Q, fazendo c
                                                            om OR
  164 0000001E 6001            STR              R1, [R0]    ; Move para a mem?r
                                                            ia os bits das port
                                                            as no endere?o do R
                                                            CGCGPIO
  165 00000020         



ARM Macro Assembler    Page 8 


  166 00000020 4874            LDR              R0, =SYSCTL_PRGPIO_R ; Carrega 
                                                            o endere?o do PRGPI
                                                            O para esperar os G
                                                            PIO ficarem prontos
                                                            
  167 00000022 6801    EsperaGPIO
                               LDR              R1, [R0]    ; L? da mem?ria o c
                                                            onte?do do endere?o
                                                             do registrador
  168 00000024 F04F 0201       MOV              R2, #GPIO_PORTA ; Seta os bits 
                                                            correspondentes ?s 
                                                            portas para fazer a
                                                             compara??o - Seta 
                                                            o bit da porta A
  169 00000028 F442 7280       ORR              R2, #GPIO_PORTJ ; Seta o bit da
                                                             porta J, fazendo c
                                                            om OR
  170 0000002C F442 7200       ORR              R2, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  171 00000030 F442 6280       ORR              R2, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  172 00000034 F442 6200       ORR              R2, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  173 00000038 F442 5200       ORR              R2, #GPIO_PORTP ; Seta o bit da
                                                             porta P, fazendo c
                                                            om OR
  174 0000003C F442 4280       ORR              R2, #GPIO_PORTQ ; Seta o bit da
                                                             porta Q, fazendo c
                                                            om OR
  175 00000040 4211            TST              R1, R2      ; Testa o R1 com R2
                                                             fazendo R1 & R2
  176 00000042 D0EE            BEQ              EsperaGPIO  ; Se o flag Z=1, vo
                                                            lta para o la?o. Se
                                                            n?o continua execut
                                                            ando
  177 00000044         
  178 00000044         ; 2. Limpar o AMSEL para desabilitar a anal?gica
  179 00000044 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para desabi
                                                            litar a fun??o anal
                                                            ?gica
  180 00000048 486B            LDR              R0, =GPIO_PORTA_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndere?o do AMSEL pa
                                                            ra a porta A
  181 0000004A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             A da mem?ria
  182 0000004C         
  183 0000004C 486B            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndere?o do AMSEL pa
                                                            ra a porta J
  184 0000004E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             J da mem?ria



ARM Macro Assembler    Page 9 


  185 00000050         
  186 00000050 486B            LDR              R0, =GPIO_PORTK_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta K
  187 00000052 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             K da mem?ria
  188 00000054         
  189 00000054 486B            LDR              R0, =GPIO_PORTL_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta L
  190 00000056 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             L da mem?ria
  191 00000058         
  192 00000058 486B            LDR              R0, =GPIO_PORTM_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta M
  193 0000005A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             M da mem?ria
  194 0000005C         
  195 0000005C 486B            LDR              R0, =GPIO_PORTP_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta P
  196 0000005E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             P da mem?ria
  197 00000060         
  198 00000060 486B            LDR              R0, =GPIO_PORTQ_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta Q
  199 00000062 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             Q da mem?ria
  200 00000064         
  201 00000064         ; 3. Limpar PCTL para selecionar o GPIO
  202 00000064 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para seleci
                                                            onar o modo GPIO
  203 00000068 486A            LDR              R0, =GPIO_PORTA_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dere?o do PCTL para
                                                             a porta A
  204 0000006A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            A da mem?ria
  205 0000006C         
  206 0000006C 486A            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dere?o do PCTL para
                                                             a porta J
  207 0000006E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 



ARM Macro Assembler    Page 10 


                                                            J da mem?ria
  208 00000070         
  209 00000070 486A            LDR              R0, =GPIO_PORTK_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta K
  210 00000072 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            K da mem?ria
  211 00000074         
  212 00000074 486A            LDR              R0, =GPIO_PORTL_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta L
  213 00000076 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            L da mem?ria
  214 00000078         
  215 00000078 486A            LDR              R0, =GPIO_PORTM_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta M
  216 0000007A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            M da mem?ria
  217 0000007C         
  218 0000007C 486A            LDR              R0, =GPIO_PORTP_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta P
  219 0000007E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            P da mem?ria
  220 00000080         
  221 00000080 486A            LDR              R0, =GPIO_PORTQ_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta Q
  222 00000082 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            Q da mem?ria
  223 00000084         
  224 00000084         ; 4. DIR para 0 se for entrada, 1 se for sa?da
  225 00000084 486A            LDR              R0, =GPIO_PORTA_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ere?o do DIR para a
                                                             porta A
  226 00000086 F04F 01F0       MOV              R1, #2_11110000 ; PA7:PA4
  227 0000008A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  228 0000008C         
  229 0000008C         ; O certo era verificar os outros bits da PJ para n?o tr
                       ansformar entradas em sa?das desnecess?rias
  230 0000008C 4869            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ere?o do DIR para a
                                                             porta J
  231 0000008E F04F 0100       MOV              R1, #2_00000000 ; PJ0
  232 00000092 6001            STR              R1, [R0]    ; Guarda no registr



ARM Macro Assembler    Page 11 


                                                            ador PCTL da porta 
                                                            J da mem?ria
  233 00000094         
  234 00000094 4868            LDR              R0, =GPIO_PORTK_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta K
  235 00000096 F04F 01FF       MOV              R1, #2_11111111 ; PK7:PK0
  236 0000009A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  237 0000009C         
  238 0000009C 4867            LDR              R0, =GPIO_PORTL_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta L
  239 0000009E F04F 0100       MOV              R1, #2_00000000 ; PL3:PL0
  240 000000A2 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  241 000000A4         
  242 000000A4 4866            LDR              R0, =GPIO_PORTM_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta M
  243 000000A6 F04F 01F7       MOV              R1, #2_11110111 
                                                            ; PM7:PM4 e PM2:PM0
                                                            
  244 000000AA 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  245 000000AC         
  246 000000AC 4865            LDR              R0, =GPIO_PORTP_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta P
  247 000000AE F04F 0120       MOV              R1, #2_00100000 ; PP5
  248 000000B2 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  249 000000B4         
  250 000000B4 4864            LDR              R0, =GPIO_PORTQ_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta Q
  251 000000B6 F04F 010F       MOV              R1, #2_00001111 ; PQ3:PQ0
  252 000000BA 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  253 000000BC         
  254 000000BC         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  255 000000BC         ;    Sem fun??o alternativa
  256 000000BC F04F 0100       MOV              R1, #0x00   ; Colocar o valor 0
                                                             para n?o setar fun
                                                            ??o alternativa
  257 000000C0         
  258 000000C0 4862            LDR              R0, =GPIO_PORTA_AHB_AFSEL_R ; C
                                                            arrega o endere?o d
                                                            o AFSEL da porta A
  259 000000C2 6001            STR              R1, [R0]    ; Escreve na porta
  260 000000C4         
  261 000000C4 4862            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ; C
                                                            arrega o endere?o d
                                                            o AFSEL da porta J



ARM Macro Assembler    Page 12 


  262 000000C6 6001            STR              R1, [R0]    ; Escreve na porta
  263 000000C8         
  264 000000C8 4862            LDR              R0, =GPIO_PORTK_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta K
  265 000000CA 6001            STR              R1, [R0]    ; Escreve na porta
  266 000000CC         
  267 000000CC 4862            LDR              R0, =GPIO_PORTL_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta L
  268 000000CE 6001            STR              R1, [R0]    ; Escreve na porta
  269 000000D0         
  270 000000D0 4862            LDR              R0, =GPIO_PORTM_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta M
  271 000000D2 6001            STR              R1, [R0]    ; Escreve na porta
  272 000000D4         
  273 000000D4 4862            LDR              R0, =GPIO_PORTP_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta P
  274 000000D6 6001            STR              R1, [R0]    ; Escreve na porta
  275 000000D8         
  276 000000D8 4862            LDR              R0, =GPIO_PORTQ_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta Q
  277 000000DA 6001            STR              R1, [R0]    ; Escreve na porta
  278 000000DC         
  279 000000DC         ; 6. Setar os bits de DEN para habilitar I/O digital
  280 000000DC         ; Escrita amig?vel - Read-modify-write
  281 000000DC 4862            LDR              R0, =GPIO_PORTA_AHB_DEN_R ; Car
                                                            rega o endere?o do 
                                                            DEN
  282 000000DE 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  283 000000E0 F041 01F0       ORR              R1, R1, #2_11110000 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PA7:PA4
  284 000000E4 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  285 000000E6         
  286 000000E6 4861            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ; Car
                                                            rega o endere?o do 
                                                            DEN
  287 000000E8 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  288 000000EA F041 0103       ORR              R1, R1, #2_00000011 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PJ0
  289 000000EE 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita



ARM Macro Assembler    Page 13 


                                                            l
  290 000000F0         
  291 000000F0 485F            LDR              R0, =GPIO_PORTK_DEN_R ; Carrega
                                                             o endere?o do DEN
  292 000000F2 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  293 000000F4 F041 01FF       ORR              R1, R1, #2_11111111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PK7:PK0
  294 000000F8 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  295 000000FA         
  296 000000FA 485E            LDR              R0, =GPIO_PORTL_DEN_R ; Carrega
                                                             o endere?o do DEN
  297 000000FC 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  298 000000FE F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PL3:PL0
  299 00000102 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  300 00000104         
  301 00000104 485C            LDR              R0, =GPIO_PORTM_DEN_R ; Carrega
                                                             o endere?o do DEN
  302 00000106 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  303 00000108 F041 01F7       ORR              R1, R1, #2_11110111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PM7:PM4 e PM2:PM
                                                            0
  304 0000010C 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  305 0000010E         
  306 0000010E 485B            LDR              R0, =GPIO_PORTP_DEN_R ; Carrega
                                                             o endere?o do DEN
  307 00000110 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  308 00000112 F041 0120       ORR              R1, R1, #2_00100000 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PP5
  309 00000116 6001            STR              R1, [R0]    ; Escreve no regist



ARM Macro Assembler    Page 14 


                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  310 00000118         
  311 00000118 4859            LDR              R0, =GPIO_PORTQ_DEN_R ; Carrega
                                                             o endere?o do DEN
  312 0000011A 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  313 0000011C F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PQ3:PQ0
  314 00000120 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  315 00000122         
  316 00000122         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  317 00000122 4858            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ; Car
                                                            rega o endere?o do 
                                                            PUR para a porta J
  318 00000124 F04F 0103       MOV              R1, #2_0011 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PJ0
  319 00000128 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria do
                                                             resistor de pull-u
                                                            p
  320 0000012A         
  321 0000012A 4857            LDR              R0, =GPIO_PORTL_PUR_R ; Carrega
                                                             o endere?o do PUR 
                                                            para a porta L
  322 0000012C F04F 010F       MOV              R1, #2_1111 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PL3:PL0
  323 00000130 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria do
                                                             resistor de pull-u
                                                            p
  324 00000132         
  325 00000132         ; 8. Interrup??es
  326 00000132 4956            LDR              R1, =GPIO_PORTJ_IM_R
  327 00000134 F04F 0000       MOV              R0, #2_00000000 ; Desabilita a 
                                                            interrup??o na port
                                                            a J0
  328 00000138 6008            STR              R0, [R1]
  329 0000013A         
  330 0000013A F04F 0100       MOV              R1, #2_00000000
  331 0000013E 4854            LDR              R0, =GPIO_PORTJ_IS_R ; 0 para i
                                                            nterrup??o de borda
                                                             e 1 para n?vel
  332 00000140 6001            STR              R1, [R0]
  333 00000142         
  334 00000142 F04F 0100       MOV              R1, #2_00000000



ARM Macro Assembler    Page 15 


  335 00000146 4853            LDR              R0, =GPIO_PORTJ_IBE_R ; 0 para 
                                                            borda ?nica
  336 00000148 6001            STR              R1, [R0]
  337 0000014A         
  338 0000014A F04F 0102       MOV              R1, #2_00000010
  339 0000014E 4852            LDR              R0, =GPIO_PORTJ_IEV_R ; 1 para 
                                                            borda de subida
  340 00000150 6001            STR              R1, [R0]
  341 00000152         
  342 00000152 4952            LDR              R1, =GPIO_PORTJ_ICR_R ; Configu
                                                            ra a interrup??o na
                                                             porta PJ0
  343 00000154 F04F 0003       MOV              R0, #2_00000011
  344 00000158 6008            STR              R0, [R1]
  345 0000015A         
  346 0000015A 494C            LDR              R1, =GPIO_PORTJ_IM_R ; Habilita
                                                             a interrup??o na p
                                                            orta J0
  347 0000015C F04F 0003       MOV              R0, #2_00000011
  348 00000160 6008            STR              R0, [R1]
  349 00000162         
  350 00000162 494F            LDR              R1, =NVIC_EN1_R ; Habilita a in
                                                            terrup??o no PortJ
  351 00000164 F04F 0001       MOV              R0, #1
  352 00000168 EA4F 40C0       LSL              R0, R0, #19
  353 0000016C 6008            STR              R0, [R1]
  354 0000016E         
  355 0000016E 494D            LDR              R1, =NVIC_PRI12_R ; Configura p
                                                            rioridade 5 nos bit
                                                            s 29 a 31
  356 00000170 F04F 0005       MOV              R0, #5
  357 00000174 EA4F 7040       LSL              R0, R0, #29
  358 00000178 6008            STR              R0, [R1]
  359 0000017A         
  360 0000017A         
  361 0000017A 4770            BX               LR
  362 0000017C         
  363 0000017C         ; ------------------------------------------------------
                       -------------------------
  364 0000017C         ; Fun??o PortA_Output
  365 0000017C         ; Par?metro de entrada: R0
  366 0000017C         ; Par?metro de sa?da: N?o tem
  367 0000017C         PortA_Output
  368 0000017C 494A            LDR              R1, =GPIO_PORTA_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  369 0000017E         ; Read-Modify-Write para escrita
  370 0000017E 680A            LDR              R2, [R1]
  371 00000180 F022 02F0       BIC              R2, #2_11110000 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PA7:PA4
  372 00000184 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  373 00000188 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            A



ARM Macro Assembler    Page 16 


  374 0000018A 4770            BX               LR          ; Retorna
  375 0000018C         
  376 0000018C         ; Fun??o PortJ_Input
  377 0000018C         ; Par?metro de entrada: N?o tem
  378 0000018C         ; Par?metro de sa?da: R0 --> o valor da leitura
  379 0000018C         PortJ_Input
  380 0000018C 4947            LDR              R1, =GPIO_PORTJ_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  381 0000018E 6808            LDR              R0, [R1]    ; L? no barramento 
                                                            de dados dos pinos
  382 00000190 4770            BX               LR          ; Retorna
  383 00000192         
  384 00000192         ; Fun??o GPIOPortJ_Handler
  385 00000192         ; Par?metro de entrada: N?o tem
  386 00000192         ; Par?metro de sa?da: R0 --> o valor a ser atualizado
  387 00000192         GPIOPortJ_Handler
  388 00000192 4947            LDR              R1, =GPIO_PORTJ_RIS_R
  389 00000194 6808            LDR              R0, [R1]
  390 00000196         
  391 00000196 2801            CMP              R0, #1
  392 00000198 BF08            IT               EQ
  393 0000019A 2505            MOVEQ            R5, #DESTRAVA_COFRE
  394 0000019C         
  395 0000019C 2802            CMP              R0, #2
  396 0000019E F43F AFFE       BEQ              ModificaSenhaMestra
  397 000001A2         
  398 000001A2 493E            LDR              R1, =GPIO_PORTJ_ICR_R
  399 000001A4 6008            STR              R0, [R1]
  400 000001A6         
  401 000001A6 4770            BX               LR          ; Retorna
  402 000001A8         
  403 000001A8         ; Fun??o PortK_Output
  404 000001A8         ; Par?metro de entrada: R0
  405 000001A8         ; Par?metro de sa?da:  N?o tem
  406 000001A8         PortK_Output
  407 000001A8 4942            LDR              R1, =GPIO_PORTK_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  408 000001AA         ; Read-Modify-Write para escrita
  409 000001AA 680A            LDR              R2, [R1]
  410 000001AC F022 02FF       BIC              R2, #2_11111111 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PK7:PK0
  411 000001B0 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  412 000001B4 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            K
  413 000001B6 4770            BX               LR          ; Retorna
  414 000001B8         
  415 000001B8         ; Fun??o PortL_Input
  416 000001B8         ; Par?metro de entrada: N?o tem
  417 000001B8         ; Par?metro de sa?da: R0 --> o valor da leitura
  418 000001B8         PortL_Input
  419 000001B8 493F            LDR              R1, =GPIO_PORTL_DATA_R ; Carreg



ARM Macro Assembler    Page 17 


                                                            a o valor do offset
                                                             do data register
  420 000001BA 6808            LDR              R0, [R1]    ; L? no barramento 
                                                            de dados dos pinos
  421 000001BC 4770            BX               LR          ; Retorna
  422 000001BE         
  423 000001BE         ; Fun??o PortM_Output
  424 000001BE         ; Par?metro de entrada: R0
  425 000001BE         ; Par?metro de sa?da:  N?o tem
  426 000001BE         PortM_Output
  427 000001BE 493F            LDR              R1, =GPIO_PORTM_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  428 000001C0         ; Read-Modify-Write para escrita
  429 000001C0 680A            LDR              R2, [R1]
  430 000001C2 F022 02F7       BIC              R2, #2_11110111 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PM7:PM4 e PM3:PM0
  431 000001C6 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  432 000001CA 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            M
  433 000001CC 4770            BX               LR          ; Retorna
  434 000001CE         
  435 000001CE         ; Fun??o PortP_Output
  436 000001CE         ; Par?metro de entrada: R0
  437 000001CE         ; Par?metro de sa?da:  N?o tem
  438 000001CE         PortP_Output
  439 000001CE 493C            LDR              R1, =GPIO_PORTP_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  440 000001D0         ; Read-Modify-Write para escrita
  441 000001D0 680A            LDR              R2, [R1]
  442 000001D2 F022 0220       BIC              R2, #2_00100000 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PP5
  443 000001D6 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  444 000001DA 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            P
  445 000001DC 4770            BX               LR          ; Retorna
  446 000001DE         
  447 000001DE         ; Fun??o PortQ_Output
  448 000001DE         ; Par?metro de entrada: R0
  449 000001DE         ; Par?metro de sa?da: N?o tem
  450 000001DE         PortQ_Output
  451 000001DE 4939            LDR              R1, =GPIO_PORTQ_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  452 000001E0         ; Read-Modify-Write para escrita
  453 000001E0 680A            LDR              R2, [R1]
  454 000001E2 F022 020F       BIC              R2, #2_00001111 ; M?scara com b
                                                            its 1 nas posi??es 



ARM Macro Assembler    Page 18 


                                                            que queremos limpar
                                                             PQ3:PQ0
  455 000001E6 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  456 000001EA 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            Q
  457 000001EC 4770            BX               LR          ; Retorna
  458 000001EE         
  459 000001EE         ; ------------------------------------------------------
                       -------------------------
  460 000001EE         
  461 000001EE 00 00           ALIGN                        ; garante que o fim
                                                             da se??o est? alin
                                                            hada 
  462 000001F0                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40058528 
              40060528 
              40061528 
              40062528 
              40063528 
              40065528 
              40066528 
              4005852C 
              4006052C 
              4006152C 
              4006252C 
              4006352C 
              4006552C 
              4006652C 
              40058400 
              40060400 
              40061400 
              40062400 
              40063400 
              40065400 
              40066400 
              40058420 
              40060420 
              40061420 
              40062420 
              40063420 
              40065420 
              40066420 
              4005851C 
              4006051C 
              4006151C 
              4006251C 
              4006351C 
              4006551C 
              4006651C 
              40060510 
              40062510 
              40060410 
              40060404 
              40060408 



ARM Macro Assembler    Page 19 


              4006040C 
              4006041C 
              E000E104 
              E000E430 
              400583FC 
              400603FC 
              40060414 
              400613FC 
              400623FC 
              400633FC 
              400653FC 
              400663FC 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\gpio.d -o.\objects\gpio.o -IC:\Users\Arthur\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 539" --predefine="TM4C1294NCPDT SETA 1" --l
ist=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 130 in file gpio.s
   Uses
      None
Comment: .text unused
EsperaGPIO 00000022

Symbol: EsperaGPIO
   Definitions
      At line 167 in file gpio.s
   Uses
      At line 176 in file gpio.s
Comment: EsperaGPIO used once
GPIOPortJ_Handler 00000192

Symbol: GPIOPortJ_Handler
   Definitions
      At line 387 in file gpio.s
   Uses
      At line 141 in file gpio.s
Comment: GPIOPortJ_Handler used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 151 in file gpio.s
   Uses
      At line 133 in file gpio.s
Comment: GPIO_Init used once
PortA_Output 0000017C

Symbol: PortA_Output
   Definitions
      At line 367 in file gpio.s
   Uses
      At line 134 in file gpio.s
Comment: PortA_Output used once
PortJ_Input 0000018C

Symbol: PortJ_Input
   Definitions
      At line 379 in file gpio.s
   Uses
      At line 135 in file gpio.s
Comment: PortJ_Input used once
PortK_Output 000001A8

Symbol: PortK_Output
   Definitions
      At line 406 in file gpio.s
   Uses
      At line 136 in file gpio.s
Comment: PortK_Output used once
PortL_Input 000001B8

Symbol: PortL_Input



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 418 in file gpio.s
   Uses
      At line 137 in file gpio.s
Comment: PortL_Input used once
PortM_Output 000001BE

Symbol: PortM_Output
   Definitions
      At line 426 in file gpio.s
   Uses
      At line 138 in file gpio.s
Comment: PortM_Output used once
PortP_Output 000001CE

Symbol: PortP_Output
   Definitions
      At line 438 in file gpio.s
   Uses
      At line 139 in file gpio.s
Comment: PortP_Output used once
PortQ_Output 000001DE

Symbol: PortQ_Output
   Definitions
      At line 450 in file gpio.s
   Uses
      At line 140 in file gpio.s
Comment: PortQ_Output used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COFRE_FECHADO 00000003

Symbol: COFRE_FECHADO
   Definitions
      At line 15 in file gpio.s
   Uses
      None
Comment: COFRE_FECHADO unused
COFRE_FECHANDO 00000002

Symbol: COFRE_FECHANDO
   Definitions
      At line 14 in file gpio.s
   Uses
      None
Comment: COFRE_FECHANDO unused
COFRE_TRAVADO 00000004

Symbol: COFRE_TRAVADO
   Definitions
      At line 16 in file gpio.s
   Uses
      None
Comment: COFRE_TRAVADO unused
CONFIG_SENHA 00000001

Symbol: CONFIG_SENHA
   Definitions
      At line 13 in file gpio.s
   Uses
      None
Comment: CONFIG_SENHA unused
DESTRAVA_COFRE 00000005

Symbol: DESTRAVA_COFRE
   Definitions
      At line 17 in file gpio.s
   Uses
      At line 393 in file gpio.s
Comment: DESTRAVA_COFRE used once
GPIO_PORTA 00000001

Symbol: GPIO_PORTA
   Definitions
      At line 37 in file gpio.s
   Uses
      At line 157 in file gpio.s
      At line 168 in file gpio.s

GPIO_PORTA_AHB_AFSEL_R 40058420

Symbol: GPIO_PORTA_AHB_AFSEL_R
   Definitions
      At line 32 in file gpio.s
   Uses
      At line 258 in file gpio.s
Comment: GPIO_PORTA_AHB_AFSEL_R used once
GPIO_PORTA_AHB_AMSEL_R 40058528




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTA_AHB_AMSEL_R
   Definitions
      At line 29 in file gpio.s
   Uses
      At line 180 in file gpio.s
Comment: GPIO_PORTA_AHB_AMSEL_R used once
GPIO_PORTA_AHB_CR_R 40058524

Symbol: GPIO_PORTA_AHB_CR_R
   Definitions
      At line 28 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_CR_R unused
GPIO_PORTA_AHB_DATA_BITS_R 40058000

Symbol: GPIO_PORTA_AHB_DATA_BITS_R
   Definitions
      At line 36 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_DATA_BITS_R unused
GPIO_PORTA_AHB_DATA_R 400583FC

Symbol: GPIO_PORTA_AHB_DATA_R
   Definitions
      At line 35 in file gpio.s
   Uses
      At line 368 in file gpio.s
Comment: GPIO_PORTA_AHB_DATA_R used once
GPIO_PORTA_AHB_DEN_R 4005851C

Symbol: GPIO_PORTA_AHB_DEN_R
   Definitions
      At line 33 in file gpio.s
   Uses
      At line 281 in file gpio.s
Comment: GPIO_PORTA_AHB_DEN_R used once
GPIO_PORTA_AHB_DIR_R 40058400

Symbol: GPIO_PORTA_AHB_DIR_R
   Definitions
      At line 31 in file gpio.s
   Uses
      At line 225 in file gpio.s
Comment: GPIO_PORTA_AHB_DIR_R used once
GPIO_PORTA_AHB_LOCK_R 40058520

Symbol: GPIO_PORTA_AHB_LOCK_R
   Definitions
      At line 27 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_LOCK_R unused
GPIO_PORTA_AHB_PCTL_R 4005852C

Symbol: GPIO_PORTA_AHB_PCTL_R
   Definitions
      At line 30 in file gpio.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 203 in file gpio.s
Comment: GPIO_PORTA_AHB_PCTL_R used once
GPIO_PORTA_AHB_PUR_R 40058510

Symbol: GPIO_PORTA_AHB_PUR_R
   Definitions
      At line 34 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_PUR_R unused
GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 50 in file gpio.s
   Uses
      At line 158 in file gpio.s
      At line 169 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 45 in file gpio.s
   Uses
      At line 261 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 42 in file gpio.s
   Uses
      At line 183 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 41 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_BITS_R 40060000

Symbol: GPIO_PORTJ_AHB_DATA_BITS_R
   Definitions
      At line 49 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_BITS_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 48 in file gpio.s
   Uses
      At line 380 in file gpio.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTJ_AHB_DATA_R used once
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 46 in file gpio.s
   Uses
      At line 286 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 44 in file gpio.s
   Uses
      At line 230 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 40 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 43 in file gpio.s
   Uses
      At line 206 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 47 in file gpio.s
   Uses
      At line 317 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTJ_IBE_R 40060408

Symbol: GPIO_PORTJ_IBE_R
   Definitions
      At line 119 in file gpio.s
   Uses
      At line 335 in file gpio.s
Comment: GPIO_PORTJ_IBE_R used once
GPIO_PORTJ_ICR_R 4006041C

Symbol: GPIO_PORTJ_ICR_R
   Definitions
      At line 122 in file gpio.s
   Uses
      At line 342 in file gpio.s
      At line 398 in file gpio.s

GPIO_PORTJ_IEV_R 4006040C



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTJ_IEV_R
   Definitions
      At line 120 in file gpio.s
   Uses
      At line 339 in file gpio.s
Comment: GPIO_PORTJ_IEV_R used once
GPIO_PORTJ_IM_R 40060410

Symbol: GPIO_PORTJ_IM_R
   Definitions
      At line 121 in file gpio.s
   Uses
      At line 326 in file gpio.s
      At line 346 in file gpio.s

GPIO_PORTJ_IS_R 40060404

Symbol: GPIO_PORTJ_IS_R
   Definitions
      At line 118 in file gpio.s
   Uses
      At line 331 in file gpio.s
Comment: GPIO_PORTJ_IS_R used once
GPIO_PORTJ_RIS_R 40060414

Symbol: GPIO_PORTJ_RIS_R
   Definitions
      At line 123 in file gpio.s
   Uses
      At line 388 in file gpio.s
Comment: GPIO_PORTJ_RIS_R used once
GPIO_PORTK 00000200

Symbol: GPIO_PORTK
   Definitions
      At line 63 in file gpio.s
   Uses
      At line 159 in file gpio.s
      At line 170 in file gpio.s

GPIO_PORTK_AFSEL_R 40061420

Symbol: GPIO_PORTK_AFSEL_R
   Definitions
      At line 58 in file gpio.s
   Uses
      At line 264 in file gpio.s
Comment: GPIO_PORTK_AFSEL_R used once
GPIO_PORTK_AMSEL_R 40061528

Symbol: GPIO_PORTK_AMSEL_R
   Definitions
      At line 55 in file gpio.s
   Uses
      At line 186 in file gpio.s
Comment: GPIO_PORTK_AMSEL_R used once
GPIO_PORTK_CR_R 40061524




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTK_CR_R
   Definitions
      At line 54 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_CR_R unused
GPIO_PORTK_DATA_BITS_R 40061000

Symbol: GPIO_PORTK_DATA_BITS_R
   Definitions
      At line 62 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_DATA_BITS_R unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 61 in file gpio.s
   Uses
      At line 407 in file gpio.s
Comment: GPIO_PORTK_DATA_R used once
GPIO_PORTK_DEN_R 4006151C

Symbol: GPIO_PORTK_DEN_R
   Definitions
      At line 59 in file gpio.s
   Uses
      At line 291 in file gpio.s
Comment: GPIO_PORTK_DEN_R used once
GPIO_PORTK_DIR_R 40061400

Symbol: GPIO_PORTK_DIR_R
   Definitions
      At line 57 in file gpio.s
   Uses
      At line 234 in file gpio.s
Comment: GPIO_PORTK_DIR_R used once
GPIO_PORTK_LOCK_R 40061520

Symbol: GPIO_PORTK_LOCK_R
   Definitions
      At line 53 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_LOCK_R unused
GPIO_PORTK_PCTL_R 4006152C

Symbol: GPIO_PORTK_PCTL_R
   Definitions
      At line 56 in file gpio.s
   Uses
      At line 209 in file gpio.s
Comment: GPIO_PORTK_PCTL_R used once
GPIO_PORTK_PUR_R 40061510

Symbol: GPIO_PORTK_PUR_R
   Definitions
      At line 60 in file gpio.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIO_PORTK_PUR_R unused
GPIO_PORTL 00000400

Symbol: GPIO_PORTL
   Definitions
      At line 75 in file gpio.s
   Uses
      At line 160 in file gpio.s
      At line 171 in file gpio.s

GPIO_PORTL_AFSEL_R 40062420

Symbol: GPIO_PORTL_AFSEL_R
   Definitions
      At line 71 in file gpio.s
   Uses
      At line 267 in file gpio.s
Comment: GPIO_PORTL_AFSEL_R used once
GPIO_PORTL_AMSEL_R 40062528

Symbol: GPIO_PORTL_AMSEL_R
   Definitions
      At line 68 in file gpio.s
   Uses
      At line 189 in file gpio.s
Comment: GPIO_PORTL_AMSEL_R used once
GPIO_PORTL_CR_R 40062524

Symbol: GPIO_PORTL_CR_R
   Definitions
      At line 67 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_CR_R unused
GPIO_PORTL_DATA_R 400623FC

Symbol: GPIO_PORTL_DATA_R
   Definitions
      At line 74 in file gpio.s
   Uses
      At line 419 in file gpio.s
Comment: GPIO_PORTL_DATA_R used once
GPIO_PORTL_DEN_R 4006251C

Symbol: GPIO_PORTL_DEN_R
   Definitions
      At line 72 in file gpio.s
   Uses
      At line 296 in file gpio.s
Comment: GPIO_PORTL_DEN_R used once
GPIO_PORTL_DIR_R 40062400

Symbol: GPIO_PORTL_DIR_R
   Definitions
      At line 70 in file gpio.s
   Uses
      At line 238 in file gpio.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTL_DIR_R used once
GPIO_PORTL_LOCK_R 40062520

Symbol: GPIO_PORTL_LOCK_R
   Definitions
      At line 66 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_LOCK_R unused
GPIO_PORTL_PCTL_R 4006252C

Symbol: GPIO_PORTL_PCTL_R
   Definitions
      At line 69 in file gpio.s
   Uses
      At line 212 in file gpio.s
Comment: GPIO_PORTL_PCTL_R used once
GPIO_PORTL_PUR_R 40062510

Symbol: GPIO_PORTL_PUR_R
   Definitions
      At line 73 in file gpio.s
   Uses
      At line 321 in file gpio.s
Comment: GPIO_PORTL_PUR_R used once
GPIO_PORTM 00000800

Symbol: GPIO_PORTM
   Definitions
      At line 87 in file gpio.s
   Uses
      At line 161 in file gpio.s
      At line 172 in file gpio.s

GPIO_PORTM_AFSEL_R 40063420

Symbol: GPIO_PORTM_AFSEL_R
   Definitions
      At line 83 in file gpio.s
   Uses
      At line 270 in file gpio.s
Comment: GPIO_PORTM_AFSEL_R used once
GPIO_PORTM_AMSEL_R 40063528

Symbol: GPIO_PORTM_AMSEL_R
   Definitions
      At line 80 in file gpio.s
   Uses
      At line 192 in file gpio.s
Comment: GPIO_PORTM_AMSEL_R used once
GPIO_PORTM_CR_R 40063524

Symbol: GPIO_PORTM_CR_R
   Definitions
      At line 79 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_CR_R unused
GPIO_PORTM_DATA_R 400633FC



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 86 in file gpio.s
   Uses
      At line 427 in file gpio.s
Comment: GPIO_PORTM_DATA_R used once
GPIO_PORTM_DEN_R 4006351C

Symbol: GPIO_PORTM_DEN_R
   Definitions
      At line 84 in file gpio.s
   Uses
      At line 301 in file gpio.s
Comment: GPIO_PORTM_DEN_R used once
GPIO_PORTM_DIR_R 40063400

Symbol: GPIO_PORTM_DIR_R
   Definitions
      At line 82 in file gpio.s
   Uses
      At line 242 in file gpio.s
Comment: GPIO_PORTM_DIR_R used once
GPIO_PORTM_LOCK_R 40063520

Symbol: GPIO_PORTM_LOCK_R
   Definitions
      At line 78 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_LOCK_R unused
GPIO_PORTM_PCTL_R 4006352C

Symbol: GPIO_PORTM_PCTL_R
   Definitions
      At line 81 in file gpio.s
   Uses
      At line 215 in file gpio.s
Comment: GPIO_PORTM_PCTL_R used once
GPIO_PORTM_PUR_R 40063510

Symbol: GPIO_PORTM_PUR_R
   Definitions
      At line 85 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_PUR_R unused
GPIO_PORTP 00002000

Symbol: GPIO_PORTP
   Definitions
      At line 100 in file gpio.s
   Uses
      At line 162 in file gpio.s
      At line 173 in file gpio.s

GPIO_PORTP_AFSEL_R 40065420

Symbol: GPIO_PORTP_AFSEL_R



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 95 in file gpio.s
   Uses
      At line 273 in file gpio.s
Comment: GPIO_PORTP_AFSEL_R used once
GPIO_PORTP_AMSEL_R 40065528

Symbol: GPIO_PORTP_AMSEL_R
   Definitions
      At line 92 in file gpio.s
   Uses
      At line 195 in file gpio.s
Comment: GPIO_PORTP_AMSEL_R used once
GPIO_PORTP_CR_R 40065524

Symbol: GPIO_PORTP_CR_R
   Definitions
      At line 91 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_CR_R unused
GPIO_PORTP_DATA_BITS_R 40065000

Symbol: GPIO_PORTP_DATA_BITS_R
   Definitions
      At line 99 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_DATA_BITS_R unused
GPIO_PORTP_DATA_R 400653FC

Symbol: GPIO_PORTP_DATA_R
   Definitions
      At line 98 in file gpio.s
   Uses
      At line 439 in file gpio.s
Comment: GPIO_PORTP_DATA_R used once
GPIO_PORTP_DEN_R 4006551C

Symbol: GPIO_PORTP_DEN_R
   Definitions
      At line 96 in file gpio.s
   Uses
      At line 306 in file gpio.s
Comment: GPIO_PORTP_DEN_R used once
GPIO_PORTP_DIR_R 40065400

Symbol: GPIO_PORTP_DIR_R
   Definitions
      At line 94 in file gpio.s
   Uses
      At line 246 in file gpio.s
Comment: GPIO_PORTP_DIR_R used once
GPIO_PORTP_LOCK_R 40065520

Symbol: GPIO_PORTP_LOCK_R
   Definitions
      At line 90 in file gpio.s
   Uses



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

      None
Comment: GPIO_PORTP_LOCK_R unused
GPIO_PORTP_PCTL_R 4006552C

Symbol: GPIO_PORTP_PCTL_R
   Definitions
      At line 93 in file gpio.s
   Uses
      At line 218 in file gpio.s
Comment: GPIO_PORTP_PCTL_R used once
GPIO_PORTP_PUR_R 40065510

Symbol: GPIO_PORTP_PUR_R
   Definitions
      At line 97 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_PUR_R unused
GPIO_PORTQ 00004000

Symbol: GPIO_PORTQ
   Definitions
      At line 113 in file gpio.s
   Uses
      At line 163 in file gpio.s
      At line 174 in file gpio.s

GPIO_PORTQ_AFSEL_R 40066420

Symbol: GPIO_PORTQ_AFSEL_R
   Definitions
      At line 108 in file gpio.s
   Uses
      At line 276 in file gpio.s
Comment: GPIO_PORTQ_AFSEL_R used once
GPIO_PORTQ_AMSEL_R 40066528

Symbol: GPIO_PORTQ_AMSEL_R
   Definitions
      At line 105 in file gpio.s
   Uses
      At line 198 in file gpio.s
Comment: GPIO_PORTQ_AMSEL_R used once
GPIO_PORTQ_CR_R 40066524

Symbol: GPIO_PORTQ_CR_R
   Definitions
      At line 104 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_CR_R unused
GPIO_PORTQ_DATA_BITS_R 40066000

Symbol: GPIO_PORTQ_DATA_BITS_R
   Definitions
      At line 112 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_DATA_BITS_R unused



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTQ_DATA_R 400663FC

Symbol: GPIO_PORTQ_DATA_R
   Definitions
      At line 111 in file gpio.s
   Uses
      At line 451 in file gpio.s
Comment: GPIO_PORTQ_DATA_R used once
GPIO_PORTQ_DEN_R 4006651C

Symbol: GPIO_PORTQ_DEN_R
   Definitions
      At line 109 in file gpio.s
   Uses
      At line 311 in file gpio.s
Comment: GPIO_PORTQ_DEN_R used once
GPIO_PORTQ_DIR_R 40066400

Symbol: GPIO_PORTQ_DIR_R
   Definitions
      At line 107 in file gpio.s
   Uses
      At line 250 in file gpio.s
Comment: GPIO_PORTQ_DIR_R used once
GPIO_PORTQ_LOCK_R 40066520

Symbol: GPIO_PORTQ_LOCK_R
   Definitions
      At line 103 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_LOCK_R unused
GPIO_PORTQ_PCTL_R 4006652C

Symbol: GPIO_PORTQ_PCTL_R
   Definitions
      At line 106 in file gpio.s
   Uses
      At line 221 in file gpio.s
Comment: GPIO_PORTQ_PCTL_R used once
GPIO_PORTQ_PUR_R 40066510

Symbol: GPIO_PORTQ_PUR_R
   Definitions
      At line 110 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_PUR_R unused
INICIO 00000000

Symbol: INICIO
   Definitions
      At line 12 in file gpio.s
   Uses
      None
Comment: INICIO unused
INVALID_DIGIT 00000100

Symbol: INVALID_DIGIT



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 10 in file gpio.s
   Uses
      None
Comment: INVALID_DIGIT unused
INVALID_PW_CHAR FFFFFFFF

Symbol: INVALID_PW_CHAR
   Definitions
      At line 11 in file gpio.s
   Uses
      None
Comment: INVALID_PW_CHAR unused
NVIC_EN1_R E000E104

Symbol: NVIC_EN1_R
   Definitions
      At line 125 in file gpio.s
   Uses
      At line 350 in file gpio.s
Comment: NVIC_EN1_R used once
NVIC_PRI12_R E000E430

Symbol: NVIC_PRI12_R
   Definitions
      At line 124 in file gpio.s
   Uses
      At line 355 in file gpio.s
Comment: NVIC_PRI12_R used once
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 22 in file gpio.s
   Uses
      At line 166 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 21 in file gpio.s
   Uses
      At line 156 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
93 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DestravaCofre 00000000

Symbol: DestravaCofre
   Definitions
      At line 145 in file gpio.s
   Uses
      None
Comment: DestravaCofre unused
ModificaSenhaMestra 00000000

Symbol: ModificaSenhaMestra
   Definitions
      At line 144 in file gpio.s
   Uses
      At line 396 in file gpio.s
Comment: ModificaSenhaMestra used once
2 symbols
442 symbols in table
